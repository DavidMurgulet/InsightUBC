{"C:\\Users\\andre\\IdeaProjects\\Project310\\project_team208\\src\\controller\\IInsightFacade.ts":{"path":"C:\\Users\\andre\\IdeaProjects\\Project310\\project_team208\\src\\controller\\IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1},"f":{"0":1,"1":0,"2":0,"3":0},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/andre/IdeaProjects/Project310/project_team208/src/controller/IInsightFacade.ts","sources":["C:/Users/andre/IdeaProjects/Project310/project_team208/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAYD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport interface InsightResult {\n\t[key: string]: string | number;\n}\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8a1cc46df36fb102bbe41ca296c77620e7728e7b","contentHash":"25f3ef6035d6127046b93189d2ce2404daf41173a2fb6814910ec547247caf5f"},"C:\\Users\\andre\\IdeaProjects\\Project310\\project_team208\\src\\controller\\InsightFacade.ts":{"path":"C:\\Users\\andre\\IdeaProjects\\Project310\\project_team208\\src\\controller\\InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":0},"end":{"line":29,"column":91}},"28":{"start":{"line":30,"column":25},"end":{"line":30,"column":52}},"29":{"start":{"line":31,"column":11},"end":{"line":31,"column":38}},"30":{"start":{"line":32,"column":13},"end":{"line":32,"column":42}},"31":{"start":{"line":33,"column":16},"end":{"line":33,"column":49}},"32":{"start":{"line":34,"column":18},"end":{"line":34,"column":38}},"33":{"start":{"line":36,"column":25},"end":{"line":36,"column":71}},"34":{"start":{"line":37,"column":18},"end":{"line":37,"column":126}},"35":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"36":{"start":{"line":39,"column":8},"end":{"line":39,"column":38}},"37":{"start":{"line":41,"column":16},"end":{"line":41,"column":37}},"38":{"start":{"line":42,"column":4},"end":{"line":48,"column":5}},"39":{"start":{"line":43,"column":8},"end":{"line":43,"column":42}},"40":{"start":{"line":44,"column":8},"end":{"line":44,"column":20}},"41":{"start":{"line":47,"column":8},"end":{"line":47,"column":21}},"42":{"start":{"line":50,"column":0},"end":{"line":50,"column":34}},"43":{"start":{"line":52,"column":25},"end":{"line":52,"column":71}},"44":{"start":{"line":53,"column":16},"end":{"line":53,"column":37}},"45":{"start":{"line":54,"column":4},"end":{"line":54,"column":38}},"46":{"start":{"line":55,"column":26},"end":{"line":55,"column":47}},"47":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"48":{"start":{"line":57,"column":8},"end":{"line":57,"column":38}},"49":{"start":{"line":59,"column":22},"end":{"line":59,"column":48}},"50":{"start":{"line":60,"column":27},"end":{"line":71,"column":5}},"51":{"start":{"line":72,"column":25},"end":{"line":72,"column":89}},"52":{"start":{"line":72,"column":67},"end":{"line":72,"column":87}},"53":{"start":{"line":73,"column":4},"end":{"line":89,"column":5}},"54":{"start":{"line":75,"column":8},"end":{"line":81,"column":9}},"55":{"start":{"line":76,"column":12},"end":{"line":76,"column":61}},"56":{"start":{"line":77,"column":12},"end":{"line":77,"column":50}},"57":{"start":{"line":80,"column":12},"end":{"line":80,"column":21}},"58":{"start":{"line":82,"column":8},"end":{"line":88,"column":9}},"59":{"start":{"line":83,"column":12},"end":{"line":87,"column":13}},"60":{"start":{"line":84,"column":16},"end":{"line":86,"column":17}},"61":{"start":{"line":84,"column":52},"end":{"line":84,"column":104}},"62":{"start":{"line":85,"column":20},"end":{"line":85,"column":49}},"63":{"start":{"line":90,"column":4},"end":{"line":90,"column":34}},"64":{"start":{"line":92,"column":0},"end":{"line":92,"column":42}},"65":{"start":{"line":94,"column":21},"end":{"line":94,"column":23}},"66":{"start":{"line":95,"column":18},"end":{"line":95,"column":43}},"67":{"start":{"line":96,"column":24},"end":{"line":121,"column":6}},"68":{"start":{"line":97,"column":26},"end":{"line":97,"column":55}},"69":{"start":{"line":99,"column":24},"end":{"line":99,"column":67}},"70":{"start":{"line":100,"column":20},"end":{"line":100,"column":41}},"71":{"start":{"line":101,"column":24},"end":{"line":101,"column":52}},"72":{"start":{"line":102,"column":30},"end":{"line":102,"column":55}},"73":{"start":{"line":103,"column":8},"end":{"line":105,"column":9}},"74":{"start":{"line":104,"column":12},"end":{"line":104,"column":90}},"75":{"start":{"line":106,"column":26},"end":{"line":106,"column":53}},"76":{"start":{"line":107,"column":28},"end":{"line":107,"column":167}},"77":{"start":{"line":107,"column":81},"end":{"line":107,"column":166}},"78":{"start":{"line":108,"column":33},"end":{"line":116,"column":10}},"79":{"start":{"line":109,"column":29},"end":{"line":109,"column":59}},"80":{"start":{"line":110,"column":12},"end":{"line":110,"column":58}},"81":{"start":{"line":111,"column":31},"end":{"line":111,"column":51}},"82":{"start":{"line":112,"column":12},"end":{"line":115,"column":15}},"83":{"start":{"line":113,"column":29},"end":{"line":113,"column":61}},"84":{"start":{"line":114,"column":16},"end":{"line":114,"column":218}},"85":{"start":{"line":117,"column":31},"end":{"line":117,"column":66}},"86":{"start":{"line":118,"column":25},"end":{"line":118,"column":46}},"87":{"start":{"line":119,"column":24},"end":{"line":119,"column":129}},"88":{"start":{"line":120,"column":8},"end":{"line":120,"column":31}},"89":{"start":{"line":122,"column":4},"end":{"line":122,"column":35}},"90":{"start":{"line":123,"column":4},"end":{"line":123,"column":20}},"91":{"start":{"line":125,"column":0},"end":{"line":125,"column":62}},"92":{"start":{"line":128,"column":8},"end":{"line":128,"column":49}},"93":{"start":{"line":129,"column":29},"end":{"line":129,"column":64}},"94":{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},"95":{"start":{"line":133,"column":12},"end":{"line":133,"column":71}},"96":{"start":{"line":135,"column":22},"end":{"line":135,"column":48}},"97":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"98":{"start":{"line":137,"column":12},"end":{"line":137,"column":71}},"99":{"start":{"line":139,"column":8},"end":{"line":141,"column":9}},"100":{"start":{"line":140,"column":12},"end":{"line":140,"column":71}},"101":{"start":{"line":142,"column":31},"end":{"line":142,"column":55}},"102":{"start":{"line":143,"column":8},"end":{"line":145,"column":9}},"103":{"start":{"line":144,"column":12},"end":{"line":144,"column":71}},"104":{"start":{"line":146,"column":8},"end":{"line":146,"column":50}},"105":{"start":{"line":149,"column":8},"end":{"line":149,"column":50}},"106":{"start":{"line":152,"column":8},"end":{"line":152,"column":50}},"107":{"start":{"line":155,"column":8},"end":{"line":155,"column":50}},"108":{"start":{"line":158,"column":0},"end":{"line":158,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"isBase64Zip","decl":{"start":{"line":35,"column":15},"end":{"line":35,"column":26}},"loc":{"start":{"line":35,"column":36},"end":{"line":49,"column":1}},"line":35},"8":{"name":"validateDataset","decl":{"start":{"line":51,"column":15},"end":{"line":51,"column":30}},"loc":{"start":{"line":51,"column":40},"end":{"line":91,"column":1}},"line":51},"9":{"name":"(anonymous_9)","decl":{"start":{"line":72,"column":57},"end":{"line":72,"column":58}},"loc":{"start":{"line":72,"column":67},"end":{"line":72,"column":87}},"line":72},"10":{"name":"(anonymous_10)","decl":{"start":{"line":84,"column":41},"end":{"line":84,"column":42}},"loc":{"start":{"line":84,"column":52},"end":{"line":84,"column":104}},"line":84},"11":{"name":"loadDatasetsFromDirectory","decl":{"start":{"line":93,"column":15},"end":{"line":93,"column":40}},"loc":{"start":{"line":93,"column":52},"end":{"line":124,"column":1}},"line":93},"12":{"name":"(anonymous_12)","decl":{"start":{"line":97,"column":16},"end":{"line":97,"column":17}},"loc":{"start":{"line":97,"column":26},"end":{"line":97,"column":55}},"line":97},"13":{"name":"(anonymous_13)","decl":{"start":{"line":98,"column":13},"end":{"line":98,"column":14}},"loc":{"start":{"line":98,"column":29},"end":{"line":121,"column":5}},"line":98},"14":{"name":"(anonymous_14)","decl":{"start":{"line":107,"column":70},"end":{"line":107,"column":71}},"loc":{"start":{"line":107,"column":81},"end":{"line":107,"column":166}},"line":107},"15":{"name":"(anonymous_15)","decl":{"start":{"line":108,"column":49},"end":{"line":108,"column":50}},"loc":{"start":{"line":108,"column":71},"end":{"line":116,"column":9}},"line":108},"16":{"name":"(anonymous_16)","decl":{"start":{"line":112,"column":41},"end":{"line":112,"column":42}},"loc":{"start":{"line":112,"column":58},"end":{"line":115,"column":13}},"line":112},"17":{"name":"(anonymous_17)","decl":{"start":{"line":127,"column":4},"end":{"line":127,"column":5}},"loc":{"start":{"line":127,"column":18},"end":{"line":130,"column":5}},"line":127},"18":{"name":"(anonymous_18)","decl":{"start":{"line":131,"column":4},"end":{"line":131,"column":5}},"loc":{"start":{"line":131,"column":40},"end":{"line":147,"column":5}},"line":131},"19":{"name":"(anonymous_19)","decl":{"start":{"line":148,"column":4},"end":{"line":148,"column":5}},"loc":{"start":{"line":148,"column":22},"end":{"line":150,"column":5}},"line":148},"20":{"name":"(anonymous_20)","decl":{"start":{"line":151,"column":4},"end":{"line":151,"column":5}},"loc":{"start":{"line":151,"column":24},"end":{"line":153,"column":5}},"line":151},"21":{"name":"(anonymous_21)","decl":{"start":{"line":154,"column":4},"end":{"line":154,"column":5}},"loc":{"start":{"line":154,"column":19},"end":{"line":156,"column":5}},"line":154}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26},"19":{"loc":{"start":{"line":37,"column":18},"end":{"line":37,"column":126}},"type":"binary-expr","locations":[{"start":{"line":37,"column":18},"end":{"line":37,"column":42}},{"start":{"line":37,"column":46},"end":{"line":37,"column":70}},{"start":{"line":37,"column":74},"end":{"line":37,"column":98}},{"start":{"line":37,"column":102},"end":{"line":37,"column":126}}],"line":37},"20":{"loc":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},{"start":{"line":38,"column":4},"end":{"line":40,"column":5}}],"line":38},"21":{"loc":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},{"start":{"line":56,"column":4},"end":{"line":58,"column":5}}],"line":56},"22":{"loc":{"start":{"line":82,"column":8},"end":{"line":88,"column":9}},"type":"if","locations":[{"start":{"line":82,"column":8},"end":{"line":88,"column":9}},{"start":{"line":82,"column":8},"end":{"line":88,"column":9}}],"line":82},"23":{"loc":{"start":{"line":84,"column":16},"end":{"line":86,"column":17}},"type":"if","locations":[{"start":{"line":84,"column":16},"end":{"line":86,"column":17}},{"start":{"line":84,"column":16},"end":{"line":86,"column":17}}],"line":84},"24":{"loc":{"start":{"line":103,"column":8},"end":{"line":105,"column":9}},"type":"if","locations":[{"start":{"line":103,"column":8},"end":{"line":105,"column":9}},{"start":{"line":103,"column":8},"end":{"line":105,"column":9}}],"line":103},"25":{"loc":{"start":{"line":107,"column":81},"end":{"line":107,"column":166}},"type":"binary-expr","locations":[{"start":{"line":107,"column":81},"end":{"line":107,"column":114}},{"start":{"line":107,"column":118},"end":{"line":107,"column":152}},{"start":{"line":107,"column":156},"end":{"line":107,"column":166}}],"line":107},"26":{"loc":{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},{"start":{"line":132,"column":8},"end":{"line":134,"column":9}}],"line":132},"27":{"loc":{"start":{"line":132,"column":12},"end":{"line":132,"column":55}},"type":"binary-expr","locations":[{"start":{"line":132,"column":12},"end":{"line":132,"column":15}},{"start":{"line":132,"column":19},"end":{"line":132,"column":35}},{"start":{"line":132,"column":39},"end":{"line":132,"column":55}}],"line":132},"28":{"loc":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},{"start":{"line":136,"column":8},"end":{"line":138,"column":9}}],"line":136},"29":{"loc":{"start":{"line":139,"column":8},"end":{"line":141,"column":9}},"type":"if","locations":[{"start":{"line":139,"column":8},"end":{"line":141,"column":9}},{"start":{"line":139,"column":8},"end":{"line":141,"column":9}}],"line":139},"30":{"loc":{"start":{"line":143,"column":8},"end":{"line":145,"column":9}},"type":"if","locations":[{"start":{"line":143,"column":8},"end":{"line":145,"column":9}},{"start":{"line":143,"column":8},"end":{"line":145,"column":9}}],"line":143}},"s":{"0":1,"1":119,"2":119,"3":119,"4":119,"5":114,"6":5,"7":119,"8":0,"9":0,"10":0,"11":1,"12":2,"13":0,"14":1,"15":2,"16":0,"17":2,"18":2,"19":2,"20":119,"21":119,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":0,"75":1,"76":1,"77":6,"78":1,"79":3,"80":3,"81":3,"82":2,"83":119,"84":119,"85":1,"86":0,"87":0,"88":0,"89":1,"90":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1},"f":{"0":119,"1":5,"2":0,"3":2,"4":0,"5":2,"6":1,"7":0,"8":0,"9":0,"10":0,"11":1,"12":1,"13":1,"14":6,"15":3,"16":119,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"0":[1,1,1],"1":[1,0],"2":[119,0],"3":[114,5],"4":[119,119],"5":[5,114],"6":[114,5],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,2],"12":[2,2],"13":[2,0],"14":[119,0],"15":[119,119],"16":[1,1,1],"17":[0,1],"18":[1,1],"19":[0,0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,1],"25":[6,4,4],"26":[0,0],"27":[0,0,0],"28":[0,0],"29":[0,0],"30":[0,0]},"inputSourceMap":{"version":3,"file":"C:/Users/andre/IdeaProjects/Project310/project_team208/src/controller/InsightFacade.ts","sources":["C:/Users/andre/IdeaProjects/Project310/project_team208/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import {IInsightFacade, InsightDataset, InsightDatasetKind, InsightError, InsightResult} from \"./IInsightFacade\";\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nimport JSZip from \"jszip\";\nimport {Dataset, Section} from \"./Dataset\";\n\n//\tcheck if content string is base 64 ZIP\nexport async function isBase64Zip(content: string): Promise<boolean> {\n\t//\tdecode the string\n\tconst decodedBytes: Uint8Array = new Uint8Array(Buffer.from(content, \"base64\"));\n\n\t// check first 4 bytes against ZIP signature\n\tconst isZIP =\n\t\tdecodedBytes[0] === 0x50 && decodedBytes[1] === 0x4b && decodedBytes[2] === 0x03 && decodedBytes[3] === 0x04;\n\n\tif (!isZIP) {\n\t\treturn Promise.resolve(false);\n\t}\n\n\t// validate ZIP content\n\tconst zip = new JSZip();\n\ttry {\n\t\tawait zip.loadAsync(decodedBytes);\n\t\t//\tloaded successfully, valid ZIP\n\t\treturn true;\n\t} catch (error) {\n\t\t//\tload failed, corrupted or not ZIP\n\t\treturn false;\n\t}\n}\n\n//\tcitation: Structure of JSZip decode from consultation with Chat GTP\nexport async function validateDataset(content: string): Promise<boolean> {\n\tconst decodedBytes: Uint8Array = new Uint8Array(Buffer.from(content, \"base64\"));\n\tconst zip = new JSZip();\n\tawait zip.loadAsync(decodedBytes);\n\n\tconst coursesFolder = zip.folder(\"courses\");\n\tif (!coursesFolder) {\n\t\treturn Promise.resolve(false);\n\t}\n\n\t// Log the contents of the coursesFolder for debugging\n\t// coursesFolder.forEach((relativePath, file) => {\n\t// \tconsole.log(relativePath);\n\t// });\n\n\tconst jsonFiles = coursesFolder.file(/^.*$/);\n\tconst requiredFields = [\n\t\t\"id\", //\t'uuid'\n\t\t\"Course\", //\t'id'\n\t\t\"Title\", // \t'title'\n\t\t\"Professor\", //\t'instructor'\n\t\t\"Subject\", //\t'department'\n\t\t\"Year\", //\t'year'\n\t\t\"Avg\", //\t'avg'\n\t\t\"Pass\", //\t'pass'\n\t\t\"Fail\", //\t'fail'\n\t\t\"Audit\", //\t'audit'\n\t];\n\n\t//\twait to get content of all JSON files\n\tconst fileContents = await Promise.all(jsonFiles.map((file) => file.async(\"string\")));\n\n\tfor (let fileContent of fileContents) {\n\t\tlet jsonContent;\n\t\ttry {\n\t\t\t//\tlogging\n\t\t\tconsole.log(\"Attempting to parse:\", fileContent);\n\t\t\tjsonContent = JSON.parse(fileContent);\n\t\t} catch (error) {\n\t\t\t// Not a valid JSON formatted file\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (jsonContent.result) {\n\t\t\tfor (let section of jsonContent.result) {\n\t\t\t\tif (requiredFields.every((field) => Object.prototype.hasOwnProperty.call(section, field))) {\n\t\t\t\t\t// Found a valid section\n\t\t\t\t\treturn Promise.resolve(true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// No valid section found\n\treturn Promise.resolve(false);\n}\n\n//\tload data from disk './data' to memory\nexport async function loadDatasetsFromDirectory(directory: string): Promise<Dataset[]> {\n\tconst datasets: Dataset[] = [];\n\tconst files = fs.readdirSync(directory);\n\n\tconst zipPromises = files\n\t\t.filter((file) => path.extname(file) === \".zip\")\n\t\t.map(async (file) => {\n\t\t\tconst zipData = fs.readFileSync(path.join(directory, file));\n\t\t\tconst zip = new JSZip();\n\t\t\tconst content = await zip.loadAsync(zipData);\n\n\t\t\tconst coursesFolder: JSZip | null = content.folder(\"courses\");\n\t\t\tif (!coursesFolder) {\n\t\t\t\treturn Promise.reject(\"No 'course' folder found in this zip's root: \" + file);\n\t\t\t}\n\n\t\t\tconst datasetId = path.basename(file, \".zip\");\n\t\t\t//\tlook at all files (that are not folders) within course as all are assumed to be valid\n\t\t\tconst courseFiles = Object.values(coursesFolder.files).filter(\n\t\t\t\t(fileX) => fileX.name.startsWith(\"courses/\") && fileX.name.split(\"/\").length === 2 && !fileX.dir\n\t\t\t);\n\n\t\t\tconst sectionsPromises = courseFiles.map(async (courseFile) => {\n\t\t\t\tconst jsonData = await courseFile.async(\"text\");\n\t\t\t\t\n\t\t\t\t//\tlogging\n\t\t\t\tconsole.log(\"Attempting to parse:\", jsonData);\n\t\t\t\tconst courseData = JSON.parse(jsonData);\n\n\t\t\t\treturn courseData.result.map((sectionData: any) => {\n\t\t\t\t\tconst uuid = `${datasetId}_${sectionData.id}`;\n\t\t\t\t\treturn new Section(\n\t\t\t\t\t\tuuid,\n\t\t\t\t\t\tsectionData.id,\n\t\t\t\t\t\tsectionData.title,\n\t\t\t\t\t\tsectionData.instructor,\n\t\t\t\t\t\tsectionData.dept,\n\t\t\t\t\t\tsectionData.year,\n\t\t\t\t\t\tsectionData.avg,\n\t\t\t\t\t\tsectionData.pass,\n\t\t\t\t\t\tsectionData.fail,\n\t\t\t\t\t\tsectionData.audit\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tconst sectionsArrays = await Promise.all(sectionsPromises);\n\t\t\tconst sections = sectionsArrays.flat();\n\n\t\t\tconst dataset = new Dataset(datasetId, sections.length, sections, InsightDatasetKind.Sections);\n\t\t\tdatasets.push(dataset);\n\t\t});\n\tawait Promise.all(zipPromises);\n\treturn datasets;\n}\n\n/**\n * This is the main programmatic entry point for the project.\n * Method documentation is in IInsightFacade\n *\n */\nexport default class InsightFacade implements IInsightFacade {\n\tconstructor() {\n\t\tconsole.log(\"InsightFacadeImpl::init()\");\n\n\t\t//\tLoad datasets from memory if they exist\n\t\tlet listOfDatasets = loadDatasetsFromDirectory(\"./data\");\n\t}\n\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\t//\tTODO load current datasets from disk\n\t\t//\tTODO check if id already exists\n\n\t\t//\tcheck if id is valid\n\t\tif (!id || id.includes(\"_\") || id.trim() === \"\") {\n\t\t\treturn Promise.reject(new InsightError());\n\t\t}\n\n\t\t//\tchecks if it is a valid non-empty ZIP file\n\t\tconst isZIP = await isBase64Zip(content);\n\n\t\tif (!isZIP) {\n\t\t\treturn Promise.reject(new InsightError());\n\t\t}\n\n\t\t//\tcheck if kind is valid\n\t\tif (kind === InsightDatasetKind.Rooms) {\n\t\t\t//\treject if Rooms\n\t\t\treturn Promise.reject(new InsightError());\n\t\t}\n\n\t\t// check if dataset is valid\n\t\tconst isValidDataset = validateDataset(content);\n\n\t\tif (!isValidDataset) {\n\t\t\treturn Promise.reject(new InsightError());\n\t\t}\n\n\t\t//\tTODO add dataset to disk (./data)\n\n\t\t//  TODO parse dataset to Dataset class\n\n\t\t//  TODO add to memory (datasets.add)\n\n\t\t//\tTODO return string array of ids of all currently added dataset (upon success)\n\n\t\treturn Promise.reject(\"Not implemented.\");\n\t}\n\n\tpublic removeDataset(id: string): Promise<string> {\n\t\treturn Promise.reject(\"Not implemented.\");\n\t}\n\n\tpublic performQuery(query: unknown): Promise<InsightResult[]> {\n\t\treturn Promise.reject(\"Not implemented.\");\n\t}\n\n\tpublic listDatasets(): Promise<InsightDataset[]> {\n\t\treturn Promise.reject(\"Not implemented.\");\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"747b938573c5e3d9fef3a898b83185b8ad16ff8e","contentHash":"b642b41699a8a6d530c822a27061b578333baa18bc41eff985e6a1a0219e7ced"},"C:\\Users\\andre\\IdeaProjects\\Project310\\project_team208\\src\\controller\\Dataset.ts":{"path":"C:\\Users\\andre\\IdeaProjects\\Project310\\project_team208\\src\\controller\\Dataset.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":43}},"2":{"start":{"line":16,"column":8},"end":{"line":16,"column":25}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":21}},"4":{"start":{"line":18,"column":8},"end":{"line":18,"column":27}},"5":{"start":{"line":19,"column":8},"end":{"line":19,"column":37}},"6":{"start":{"line":20,"column":8},"end":{"line":20,"column":25}},"7":{"start":{"line":21,"column":8},"end":{"line":21,"column":25}},"8":{"start":{"line":22,"column":8},"end":{"line":22,"column":23}},"9":{"start":{"line":23,"column":8},"end":{"line":23,"column":25}},"10":{"start":{"line":24,"column":8},"end":{"line":24,"column":25}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":27}},"12":{"start":{"line":28,"column":0},"end":{"line":28,"column":26}},"13":{"start":{"line":35,"column":8},"end":{"line":35,"column":21}},"14":{"start":{"line":36,"column":8},"end":{"line":36,"column":31}},"15":{"start":{"line":37,"column":8},"end":{"line":37,"column":33}},"16":{"start":{"line":38,"column":8},"end":{"line":38,"column":25}},"17":{"start":{"line":41,"column":0},"end":{"line":41,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":81},"end":{"line":26,"column":5}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":45},"end":{"line":39,"column":5}},"line":34}},"branchMap":{},"s":{"0":1,"1":1,"2":119,"3":119,"4":119,"5":119,"6":119,"7":119,"8":119,"9":119,"10":119,"11":119,"12":1,"13":0,"14":0,"15":0,"16":0,"17":1},"f":{"0":119,"1":0},"b":{},"inputSourceMap":{"version":3,"file":"C:/Users/andre/IdeaProjects/Project310/project_team208/src/controller/Dataset.ts","sources":["C:/Users/andre/IdeaProjects/Project310/project_team208/src/controller/Dataset.ts"],"names":[],"mappings":";;;AAEA,MAAa,OAAO;IACZ,IAAI,CAAS;IACb,EAAE,CAAS;IACX,KAAK,CAAS;IACd,UAAU,CAAS;IACnB,IAAI,CAAS;IACb,IAAI,CAAS;IACb,GAAG,CAAS;IACZ,IAAI,CAAS;IACb,IAAI,CAAS;IACb,KAAK,CAAS;IAErB,YACC,IAAY,EACZ,EAAU,EACV,KAAa,EACb,UAAkB,EAClB,IAAY,EACZ,IAAY,EACZ,GAAW,EACX,IAAY,EACZ,IAAY,EACZ,KAAa;QAEb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACpB,CAAC;CACD;AAnCD,0BAmCC;AAED,MAAa,OAAO;IACZ,EAAE,CAAS;IACX,OAAO,CAAS;IAChB,QAAQ,CAAY;IACpB,IAAI,CAAqB;IAEhC,YAAY,EAAU,EAAE,OAAe,EAAE,QAAmB,EAAE,IAAwB;QACrF,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;CACD;AAZD,0BAYC","sourcesContent":["import {InsightDatasetKind} from \"./IInsightFacade\";\n\nexport class Section {\n\tpublic uuid: string;\n\tpublic id: string;\n\tpublic title: string;\n\tpublic instructor: string;\n\tpublic dept: string;\n\tpublic year: number;\n\tpublic avg: number;\n\tpublic pass: number;\n\tpublic fail: number;\n\tpublic audit: number;\n\n\tconstructor(\n\t\tuuid: string,\n\t\tid: string,\n\t\ttitle: string,\n\t\tinstructor: string,\n\t\tdept: string,\n\t\tyear: number,\n\t\tavg: number,\n\t\tpass: number,\n\t\tfail: number,\n\t\taudit: number\n\t) {\n\t\tthis.uuid = uuid;\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.instructor = instructor;\n\t\tthis.dept = dept;\n\t\tthis.year = year;\n\t\tthis.avg = avg;\n\t\tthis.pass = pass;\n\t\tthis.fail = fail;\n\t\tthis.audit = audit;\n\t}\n}\n\nexport class Dataset {\n\tpublic id: string;\n\tpublic numRows: number;\n\tpublic sections: Section[];\n\tpublic kind: InsightDatasetKind;\n\n\tconstructor(id: string, numRows: number, sections: Section[], kind: InsightDatasetKind) {\n\t\tthis.id = id;\n\t\tthis.numRows = numRows;\n\t\tthis.sections = sections;\n\t\tthis.kind = kind;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"039d09546a47a0ea121f7b16c224622babe738ae","contentHash":"065c8afb5641eb13085f5d4fcd0bf4fd73d558872902fee17b65f7b52872d7f0"}}