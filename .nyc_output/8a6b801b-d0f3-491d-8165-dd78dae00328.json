{"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/IInsightFacade.ts":{"path":"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":43,"6":43,"7":1,"8":5,"9":5,"10":1,"11":3,"12":3,"13":1},"f":{"0":1,"1":43,"2":5,"3":3},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/IInsightFacade.ts","sources":["/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAYD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport interface InsightResult {\n\t[key: string]: string | number;\n}\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d1b175a714fd84ee4636de46ed43ed125e4b20f1","contentHash":"15be26bba1e4ecc8a9eb962e97a62bd994e8d222ad24d778ede7b8c53352261e"},"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/Dataset.ts":{"path":"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/Dataset.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":43}},"2":{"start":{"line":16,"column":8},"end":{"line":16,"column":25}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":21}},"4":{"start":{"line":18,"column":8},"end":{"line":18,"column":27}},"5":{"start":{"line":19,"column":8},"end":{"line":19,"column":37}},"6":{"start":{"line":20,"column":8},"end":{"line":20,"column":25}},"7":{"start":{"line":21,"column":8},"end":{"line":21,"column":25}},"8":{"start":{"line":22,"column":8},"end":{"line":22,"column":23}},"9":{"start":{"line":23,"column":8},"end":{"line":23,"column":25}},"10":{"start":{"line":24,"column":8},"end":{"line":24,"column":25}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":27}},"12":{"start":{"line":28,"column":0},"end":{"line":28,"column":26}},"13":{"start":{"line":35,"column":8},"end":{"line":35,"column":21}},"14":{"start":{"line":36,"column":8},"end":{"line":36,"column":31}},"15":{"start":{"line":37,"column":8},"end":{"line":37,"column":33}},"16":{"start":{"line":38,"column":8},"end":{"line":38,"column":25}},"17":{"start":{"line":41,"column":0},"end":{"line":41,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":81},"end":{"line":26,"column":5}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":45},"end":{"line":39,"column":5}},"line":34}},"branchMap":{},"s":{"0":1,"1":1,"2":324140,"3":324140,"4":324140,"5":324140,"6":324140,"7":324140,"8":324140,"9":324140,"10":324140,"11":324140,"12":1,"13":20,"14":20,"15":20,"16":20,"17":1},"f":{"0":324140,"1":20},"b":{},"inputSourceMap":{"version":3,"file":"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/Dataset.ts","sources":["/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/Dataset.ts"],"names":[],"mappings":";;;AAEA,MAAa,OAAO;IAEZ,IAAI,CAAS;IACb,EAAE,CAAS;IACX,KAAK,CAAS;IACd,UAAU,CAAS;IACnB,IAAI,CAAS;IACb,IAAI,CAAS;IACb,GAAG,CAAS;IACZ,IAAI,CAAS;IACb,IAAI,CAAS;IACb,KAAK,CAAS;IAErB,YACC,IAAY,EACZ,EAAU,EACV,KAAa,EACb,UAAkB,EAClB,IAAY,EACZ,IAAY,EACZ,GAAW,EACX,IAAY,EACZ,IAAY,EACZ,KAAa;QAEb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACpB,CAAC;CACD;AApCD,0BAoCC;AAED,MAAa,OAAO;IACZ,EAAE,CAAS;IACX,OAAO,CAAS;IAChB,QAAQ,CAAY;IACpB,IAAI,CAAqB;IAEhC,YAAY,EAAU,EAAE,OAAe,EAAE,QAAmB,EAAE,IAAwB;QACrF,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;CACD;AAZD,0BAYC","sourcesContent":["import {InsightDatasetKind} from \"./IInsightFacade\";\n\nexport class Section {\n\t[key: string]: number | string;\n\tpublic uuid: string;\n\tpublic id: string;\n\tpublic title: string;\n\tpublic instructor: string;\n\tpublic dept: string;\n\tpublic year: number;\n\tpublic avg: number;\n\tpublic pass: number;\n\tpublic fail: number;\n\tpublic audit: number;\n\n\tconstructor(\n\t\tuuid: string,\n\t\tid: string,\n\t\ttitle: string,\n\t\tinstructor: string,\n\t\tdept: string,\n\t\tyear: number,\n\t\tavg: number,\n\t\tpass: number,\n\t\tfail: number,\n\t\taudit: number\n\t) {\n\t\tthis.uuid = uuid;\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.instructor = instructor;\n\t\tthis.dept = dept;\n\t\tthis.year = year;\n\t\tthis.avg = avg;\n\t\tthis.pass = pass;\n\t\tthis.fail = fail;\n\t\tthis.audit = audit;\n\t}\n}\n\nexport class Dataset {\n\tpublic id: string;\n\tpublic numRows: number;\n\tpublic sections: Section[];\n\tpublic kind: InsightDatasetKind;\n\n\tconstructor(id: string, numRows: number, sections: Section[], kind: InsightDatasetKind) {\n\t\tthis.id = id;\n\t\tthis.numRows = numRows;\n\t\tthis.sections = sections;\n\t\tthis.kind = kind;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bd689b1d3f6baef268a3c62c94b4cbfc5f289999","contentHash":"b88b36159c7da341eb58f6416737c022efd7b0c15b91048d41695615b41c16d6"},"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/InsightFacade.ts":{"path":"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":52}},"4":{"start":{"line":7,"column":23},"end":{"line":7,"column":48}},"5":{"start":{"line":8,"column":19},"end":{"line":8,"column":55}},"6":{"start":{"line":9,"column":20},"end":{"line":9,"column":42}},"7":{"start":{"line":10,"column":18},"end":{"line":10,"column":38}},"8":{"start":{"line":11,"column":16},"end":{"line":11,"column":34}},"9":{"start":{"line":12,"column":16},"end":{"line":12,"column":34}},"10":{"start":{"line":13,"column":20},"end":{"line":13,"column":42}},"11":{"start":{"line":17,"column":8},"end":{"line":17,"column":35}},"12":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"13":{"start":{"line":21,"column":12},"end":{"line":21,"column":68}},"14":{"start":{"line":23,"column":8},"end":{"line":28,"column":9}},"15":{"start":{"line":24,"column":12},"end":{"line":24,"column":113}},"16":{"start":{"line":27,"column":12},"end":{"line":27,"column":60}},"17":{"start":{"line":31,"column":8},"end":{"line":31,"column":49}},"18":{"start":{"line":32,"column":8},"end":{"line":32,"column":33}},"19":{"start":{"line":35,"column":8},"end":{"line":35,"column":37}},"20":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"21":{"start":{"line":38,"column":50},"end":{"line":38,"column":67}},"22":{"start":{"line":39,"column":12},"end":{"line":39,"column":82}},"23":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"24":{"start":{"line":42,"column":12},"end":{"line":42,"column":67}},"25":{"start":{"line":44,"column":22},"end":{"line":44,"column":68}},"26":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"27":{"start":{"line":46,"column":12},"end":{"line":46,"column":83}},"28":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"29":{"start":{"line":49,"column":12},"end":{"line":49,"column":77}},"30":{"start":{"line":51,"column":31},"end":{"line":51,"column":85}},"31":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"32":{"start":{"line":53,"column":12},"end":{"line":53,"column":80}},"33":{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},"34":{"start":{"line":56,"column":12},"end":{"line":56,"column":61}},"35":{"start":{"line":58,"column":25},"end":{"line":58,"column":50}},"36":{"start":{"line":59,"column":8},"end":{"line":59,"column":53}},"37":{"start":{"line":59,"column":41},"end":{"line":59,"column":51}},"38":{"start":{"line":62,"column":8},"end":{"line":62,"column":35}},"39":{"start":{"line":65,"column":8},"end":{"line":65,"column":41}},"40":{"start":{"line":68,"column":22},"end":{"line":68,"column":68}},"41":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"42":{"start":{"line":70,"column":12},"end":{"line":70,"column":71}},"43":{"start":{"line":72,"column":8},"end":{"line":83,"column":9}},"44":{"start":{"line":73,"column":12},"end":{"line":73,"column":49}},"45":{"start":{"line":74,"column":12},"end":{"line":74,"column":51}},"46":{"start":{"line":75,"column":12},"end":{"line":75,"column":93}},"47":{"start":{"line":75,"column":74},"end":{"line":75,"column":91}},"48":{"start":{"line":76,"column":12},"end":{"line":76,"column":39}},"49":{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},"50":{"start":{"line":80,"column":16},"end":{"line":80,"column":76}},"51":{"start":{"line":82,"column":12},"end":{"line":82,"column":37}},"52":{"start":{"line":86,"column":30},"end":{"line":86,"column":75}},"53":{"start":{"line":87,"column":26},"end":{"line":87,"column":71}},"54":{"start":{"line":88,"column":8},"end":{"line":134,"column":9}},"55":{"start":{"line":91,"column":12},"end":{"line":104,"column":13}},"56":{"start":{"line":92,"column":16},"end":{"line":103,"column":17}},"57":{"start":{"line":93,"column":35},"end":{"line":93,"column":43}},"58":{"start":{"line":94,"column":20},"end":{"line":102,"column":21}},"59":{"start":{"line":95,"column":24},"end":{"line":95,"column":69}},"60":{"start":{"line":97,"column":25},"end":{"line":102,"column":21}},"61":{"start":{"line":98,"column":24},"end":{"line":98,"column":70}},"62":{"start":{"line":101,"column":24},"end":{"line":101,"column":83}},"63":{"start":{"line":105,"column":32},"end":{"line":105,"column":65}},"64":{"start":{"line":106,"column":35},"end":{"line":106,"column":62}},"65":{"start":{"line":107,"column":37},"end":{"line":107,"column":71}},"66":{"start":{"line":108,"column":12},"end":{"line":130,"column":13}},"67":{"start":{"line":109,"column":16},"end":{"line":123,"column":17}},"68":{"start":{"line":110,"column":33},"end":{"line":110,"column":69}},"69":{"start":{"line":111,"column":20},"end":{"line":116,"column":21}},"70":{"start":{"line":112,"column":24},"end":{"line":112,"column":111}},"71":{"start":{"line":115,"column":24},"end":{"line":115,"column":55}},"72":{"start":{"line":118,"column":21},"end":{"line":123,"column":17}},"73":{"start":{"line":119,"column":20},"end":{"line":119,"column":111}},"74":{"start":{"line":122,"column":20},"end":{"line":122,"column":105}},"75":{"start":{"line":125,"column":17},"end":{"line":130,"column":13}},"76":{"start":{"line":126,"column":16},"end":{"line":126,"column":93}},"77":{"start":{"line":128,"column":17},"end":{"line":130,"column":13}},"78":{"start":{"line":129,"column":16},"end":{"line":129,"column":95}},"79":{"start":{"line":133,"column":12},"end":{"line":133,"column":92}},"80":{"start":{"line":135,"column":8},"end":{"line":135,"column":89}},"81":{"start":{"line":138,"column":8},"end":{"line":152,"column":11}},"82":{"start":{"line":139,"column":12},"end":{"line":151,"column":13}},"83":{"start":{"line":140,"column":37},"end":{"line":146,"column":18}},"84":{"start":{"line":141,"column":20},"end":{"line":145,"column":22}},"85":{"start":{"line":147,"column":16},"end":{"line":147,"column":38}},"86":{"start":{"line":150,"column":16},"end":{"line":150,"column":79}},"87":{"start":{"line":155,"column":0},"end":{"line":155,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":24},"end":{"line":18,"column":5}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":27},"end":{"line":29,"column":5}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":18},"end":{"line":33,"column":5}},"line":30},"4":{"name":"(anonymous_4)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":23},"end":{"line":36,"column":5}},"line":34},"5":{"name":"(anonymous_5)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":40},"end":{"line":60,"column":5}},"line":37},"6":{"name":"(anonymous_6)","decl":{"start":{"line":38,"column":37},"end":{"line":38,"column":38}},"loc":{"start":{"line":38,"column":50},"end":{"line":38,"column":67}},"line":38},"7":{"name":"(anonymous_7)","decl":{"start":{"line":59,"column":28},"end":{"line":59,"column":29}},"loc":{"start":{"line":59,"column":41},"end":{"line":59,"column":51}},"line":59},"8":{"name":"(anonymous_8)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":18},"end":{"line":63,"column":5}},"line":61},"9":{"name":"(anonymous_9)","decl":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}},"loc":{"start":{"line":64,"column":22},"end":{"line":66,"column":5}},"line":64},"10":{"name":"(anonymous_10)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":22},"end":{"line":84,"column":5}},"line":67},"11":{"name":"(anonymous_11)","decl":{"start":{"line":75,"column":61},"end":{"line":75,"column":62}},"loc":{"start":{"line":75,"column":74},"end":{"line":75,"column":91}},"line":75},"12":{"name":"(anonymous_12)","decl":{"start":{"line":85,"column":4},"end":{"line":85,"column":5}},"loc":{"start":{"line":85,"column":24},"end":{"line":136,"column":5}},"line":85},"13":{"name":"(anonymous_13)","decl":{"start":{"line":137,"column":4},"end":{"line":137,"column":5}},"loc":{"start":{"line":137,"column":19},"end":{"line":153,"column":5}},"line":137},"14":{"name":"(anonymous_14)","decl":{"start":{"line":138,"column":27},"end":{"line":138,"column":28}},"loc":{"start":{"line":138,"column":48},"end":{"line":152,"column":9}},"line":138},"15":{"name":"(anonymous_15)","decl":{"start":{"line":140,"column":61},"end":{"line":140,"column":62}},"loc":{"start":{"line":140,"column":74},"end":{"line":146,"column":17}},"line":140}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},{"start":{"line":20,"column":8},"end":{"line":22,"column":9}}],"line":20},"4":{"loc":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},{"start":{"line":38,"column":8},"end":{"line":40,"column":9}}],"line":38},"5":{"loc":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},{"start":{"line":41,"column":8},"end":{"line":43,"column":9}}],"line":41},"6":{"loc":{"start":{"line":41,"column":12},"end":{"line":41,"column":55}},"type":"binary-expr","locations":[{"start":{"line":41,"column":12},"end":{"line":41,"column":15}},{"start":{"line":41,"column":19},"end":{"line":41,"column":35}},{"start":{"line":41,"column":39},"end":{"line":41,"column":55}}],"line":41},"7":{"loc":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},{"start":{"line":45,"column":8},"end":{"line":47,"column":9}}],"line":45},"8":{"loc":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},{"start":{"line":48,"column":8},"end":{"line":50,"column":9}}],"line":48},"9":{"loc":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},{"start":{"line":52,"column":8},"end":{"line":54,"column":9}}],"line":52},"10":{"loc":{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},{"start":{"line":55,"column":8},"end":{"line":57,"column":9}}],"line":55},"11":{"loc":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},{"start":{"line":69,"column":8},"end":{"line":71,"column":9}}],"line":69},"12":{"loc":{"start":{"line":69,"column":12},"end":{"line":69,"column":56}},"type":"binary-expr","locations":[{"start":{"line":69,"column":12},"end":{"line":69,"column":15}},{"start":{"line":69,"column":19},"end":{"line":69,"column":35}},{"start":{"line":69,"column":39},"end":{"line":69,"column":56}}],"line":69},"13":{"loc":{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},"type":"if","locations":[{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},{"start":{"line":79,"column":12},"end":{"line":81,"column":13}}],"line":79},"14":{"loc":{"start":{"line":88,"column":8},"end":{"line":134,"column":9}},"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":134,"column":9}},{"start":{"line":88,"column":8},"end":{"line":134,"column":9}}],"line":88},"15":{"loc":{"start":{"line":92,"column":16},"end":{"line":103,"column":17}},"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":103,"column":17}},{"start":{"line":92,"column":16},"end":{"line":103,"column":17}}],"line":92},"16":{"loc":{"start":{"line":94,"column":20},"end":{"line":102,"column":21}},"type":"if","locations":[{"start":{"line":94,"column":20},"end":{"line":102,"column":21}},{"start":{"line":94,"column":20},"end":{"line":102,"column":21}}],"line":94},"17":{"loc":{"start":{"line":97,"column":25},"end":{"line":102,"column":21}},"type":"if","locations":[{"start":{"line":97,"column":25},"end":{"line":102,"column":21}},{"start":{"line":97,"column":25},"end":{"line":102,"column":21}}],"line":97},"18":{"loc":{"start":{"line":108,"column":12},"end":{"line":130,"column":13}},"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":130,"column":13}},{"start":{"line":108,"column":12},"end":{"line":130,"column":13}}],"line":108},"19":{"loc":{"start":{"line":108,"column":16},"end":{"line":108,"column":74}},"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":42}},{"start":{"line":108,"column":46},"end":{"line":108,"column":74}}],"line":108},"20":{"loc":{"start":{"line":109,"column":16},"end":{"line":123,"column":17}},"type":"if","locations":[{"start":{"line":109,"column":16},"end":{"line":123,"column":17}},{"start":{"line":109,"column":16},"end":{"line":123,"column":17}}],"line":109},"21":{"loc":{"start":{"line":111,"column":20},"end":{"line":116,"column":21}},"type":"if","locations":[{"start":{"line":111,"column":20},"end":{"line":116,"column":21}},{"start":{"line":111,"column":20},"end":{"line":116,"column":21}}],"line":111},"22":{"loc":{"start":{"line":118,"column":21},"end":{"line":123,"column":17}},"type":"if","locations":[{"start":{"line":118,"column":21},"end":{"line":123,"column":17}},{"start":{"line":118,"column":21},"end":{"line":123,"column":17}}],"line":118},"23":{"loc":{"start":{"line":125,"column":17},"end":{"line":130,"column":13}},"type":"if","locations":[{"start":{"line":125,"column":17},"end":{"line":130,"column":13}},{"start":{"line":125,"column":17},"end":{"line":130,"column":13}}],"line":125},"24":{"loc":{"start":{"line":128,"column":17},"end":{"line":130,"column":13}},"type":"if","locations":[{"start":{"line":128,"column":17},"end":{"line":130,"column":13}},{"start":{"line":128,"column":17},"end":{"line":130,"column":13}}],"line":128}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":25,"13":23,"14":25,"15":25,"16":0,"17":30,"18":30,"19":25,"20":29,"21":4,"22":0,"23":29,"24":2,"25":27,"26":27,"27":0,"28":27,"29":1,"30":26,"31":26,"32":11,"33":15,"34":15,"35":15,"36":15,"37":19,"38":147,"39":1,"40":13,"41":13,"42":2,"43":11,"44":11,"45":7,"46":7,"47":9,"48":7,"49":4,"50":4,"51":0,"52":73,"53":73,"54":73,"55":73,"56":143,"57":143,"58":143,"59":70,"60":73,"61":72,"62":1,"63":72,"64":72,"65":70,"66":70,"67":45,"68":43,"69":38,"70":3,"71":35,"72":2,"73":1,"74":1,"75":25,"76":19,"77":6,"78":6,"79":0,"80":0,"81":23,"82":23,"83":23,"84":25,"85":23,"86":0,"87":1},"f":{"0":1,"1":0,"2":25,"3":30,"4":25,"5":29,"6":4,"7":19,"8":147,"9":1,"10":13,"11":9,"12":73,"13":23,"14":23,"15":25},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[23,2],"4":[0,29],"5":[2,27],"6":[29,28,28],"7":[0,27],"8":[1,26],"9":[11,15],"10":[15,0],"11":[2,11],"12":[13,12,11],"13":[4,0],"14":[73,0],"15":[143,0],"16":[70,73],"17":[72,1],"18":[45,25],"19":[70,51],"20":[43,2],"21":[3,35],"22":[1,1],"23":[19,6],"24":[6,0]},"inputSourceMap":{"version":3,"file":"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/InsightFacade.ts","sources":["/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tIInsightFacade,\n\tInsightDataset,\n\tInsightDatasetKind,\n\tInsightError,\n\tInsightResult,\n\tNotFoundError,\n\tResultTooLargeError,\n} from \"./IInsightFacade\";\n// <<<<<<< HEAD\nimport {persistDir, isBase64Zip, validateDataset, loadDatasetsFromDirectory} from \"./datasetUtils\";\nimport {constants} from \"http2\";\n// =======\nimport fs, {remove} from \"fs-extra\";\nimport {Validator} from \"./Validator\";\n// >>>>>>> b192f10 (addDataset merge commit)\nimport {Dataset, Section} from \"./Dataset\";\n// <<<<<<< Updated upstream\nimport {Query, Filter, Comp, QueryNode, MField, SField, Field} from \"./Query\";\nimport {Suite} from \"mocha\";\nimport {subtle} from \"crypto\";\nimport {isKeyObject} from \"util/types\";\nimport {makeLeaf, parseOpts, parseWhere} from \"./Parse\";\nimport {Collector} from \"./Collector\";\n\nexport default class InsightFacade implements IInsightFacade {\n\tprivate listOfDatasets: Dataset[];\n\t// //\taccess listOfDatasets for debugging\n\tpublic getListOfDatasets(): Dataset[] {\n\t\treturn this.listOfDatasets;\n\t}\n\tpublic async reloadDatasets(): Promise<void> {\n\t\tif (!fs.existsSync(persistDir)) {\n\t\t\tfs.mkdirSync(persistDir);\n\t\t}\n\t\t//\tLoad datasets from memory if they exist\n\t\ttry {\n\t\t\tthis.listOfDatasets = await loadDatasetsFromDirectory(persistDir);\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error loading datasets:\", error);\n\t\t}\n\t}\n\tconstructor() {\n\t\tconsole.log(\"InsightFacadeImpl::init()\");\n\t\tthis.listOfDatasets = [];\n\t}\n\n\t//\tinitialize to load datasets, must be called after instantiating new InsightFacade\n\tpublic async initialize(): Promise<void> {\n\t\treturn this.reloadDatasets();\n\t}\n\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\tif (this.listOfDatasets.some((dataset) => dataset.id === id)) {\n\t\t\t//\tid exists\n\t\t\tthrow new InsightError(\"Dataset ID already exists.\");\n\t\t}\n\n\t\t//\tcheck if id is valid\n\t\tif (!id || id.includes(\"_\") || id.trim() === \"\") {\n\t\t\tthrow new InsightError(\"Invalid ID.\");\n\t\t}\n\n\t\t//\tchecks if it is a valid non-empty ZIP file\n\t\tconst isZIP = await isBase64Zip(content);\n\t\tif (!isZIP) {\n\t\t\tthrow new InsightError(\"Content is not a valid ZIP.\");\n\t\t}\n\n\t\t//\tcheck if kind is valid\n\t\tif (kind === InsightDatasetKind.Rooms) {\n\t\t\t//\treject if Rooms\n\t\t\tthrow new InsightError(\"Invalid dataset kind.\");\n\t\t}\n\n\t\t// check if dataset is valid, if valid add to this.listOfDatasets and write to dir\n\t\tconst isValidDataset = await validateDataset(content, id);\n\t\tif (!isValidDataset.success) {\n\t\t\tthrow new InsightError(\"Invalid dataset content.\");\n\t\t}\n\n\t\t//\tadd dataset to disk (./data)\n\t\tif (isValidDataset.dataset instanceof Dataset) {\n\t\t\tthis.listOfDatasets.push(isValidDataset.dataset);\n\t\t}\n\n\t\t//\treturn string array of ids of all currently added dataset (upon success)\n\t\tconst datasets = await this.listDatasets();\n\t\treturn datasets.map((dataset) => dataset.id);\n\t}\n\n\tpublic getDatasets() {\n\t\treturn this.listOfDatasets;\n\t}\n\n\tpublic aDataset(dataset: Dataset) {\n\t\tthis.getDatasets().push(dataset);\n\t}\n\n\tpublic removeDataset(id: string): Promise<string> {\n\t\t// path for data folders\n\t\tlet dirPath = persistDir + \"/\" + id + \".json\";\n\n\t\t// checks for invalid id,\n\t\tif (!id || id.includes(\"_\") || !id.trim().length) {\n\t\t\treturn Promise.reject(new InsightError());\n\t\t}\n\n\t\ttry {\n\t\t\tfs.statSync(dirPath);\n\t\t\tfs.unlinkSync(dirPath);\n\t\t\tthis.listOfDatasets = this.listOfDatasets.filter((dataset) => dataset.id !== id);\n\n\t\t\treturn Promise.resolve(id);\n\t\t} catch (e) {\n\t\t\tif ((e as any).code === \"ENOENT\") {\n\t\t\t\t// 'ENOENT' stands for 'Error NO ENTry', indicating the path does not exist.\n\t\t\t\treturn Promise.reject(new NotFoundError());\n\t\t\t}\n\t\t\treturn Promise.reject(e); // Handle other potential errors\n\t\t}\n\t}\n\n\t// TODO: \"NOT\" in validation and querying (DONE)\n\t// TODO: dataset checks in validation (DONE)\n\t// TODO: implement ordering (DONE)\n\t// \t\tTODO: tiebreakers in ordering\n\t// TODO: double check validation WHERE validation\n\t// TODO: order key must be in columns (DONE)\n\t// TODO: wildcard handling in queryLeaf (DONE, needs testing)\n\t// TODO: parsing for no comparator in WHERE (DONE kinda hardcoded)\n\t// TODO: Semantic Checks\n\n\tpublic performQuery(query: unknown): Promise<InsightResult[]> {\n\t\tconst dataCollector = new Collector(this.getDatasets());\n\t\tconst validator = new Validator(this.getDatasets());\n\t\tif (query instanceof Object) {\n\t\t\tlet where!: QueryNode;\n\t\t\tlet options!: QueryNode;\n\t\t\t// what if WHERE, OPTIONS, WHERE\n\t\t\tfor (const k in query) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(query, k)) {\n\t\t\t\t\tlet subQuery: object = (query as any)[k];\n\t\t\t\t\tif (k === \"WHERE\") {\n\t\t\t\t\t\twhere = parseWhere(subQuery, k);\n\t\t\t\t\t} else if (k === \"OPTIONS\") {\n\t\t\t\t\t\toptions = parseOpts(subQuery, k);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// NO WHERE/OPTIONS KEY\n\t\t\t\t\t\treturn Promise.reject(new InsightError());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst parsedQuery = new Query(where, options);\n\t\t\tconst whereValidated = validator.validWhere(where);\n\t\t\tconst optionsValidated = validator.validateOptions(options);\n\t\t\tif (whereValidated.error === 0 && optionsValidated.error === 0) {\n\t\t\t\tif (validator.checkDatasetValidity() === 0) {\n\t\t\t\t\tlet result = dataCollector.execQuery(parsedQuery);\n\t\t\t\t\tif (result.length > 5000) {\n\t\t\t\t\t\treturn Promise.reject(new ResultTooLargeError(\"result is too large\"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn Promise.resolve(result);\n\t\t\t\t\t}\n\t\t\t\t} else if (validator.checkDatasetValidity() === 1) {\n\t\t\t\t\treturn Promise.reject(new InsightError(\"cannot query multiple datasets\"));\n\t\t\t\t} else {\n\t\t\t\t\treturn Promise.reject(new NotFoundError(\"dataset cannot be found\"));\n\t\t\t\t}\n\t\t\t} else if (whereValidated.error === 1) {\n\t\t\t\treturn Promise.reject(new InsightError(whereValidated.msg));\n\t\t\t} else if (optionsValidated.error === 1) {\n\t\t\t\treturn Promise.reject(new InsightError(optionsValidated.msg));\n\t\t\t}\n\t\t} else {\n\t\t\treturn Promise.reject(new InsightError(\"query not an object\"));\n\t\t}\n\t\treturn Promise.reject(new InsightError(\"shouldn't reach this\"));\n\t}\n\n\tpublic listDatasets(): Promise<InsightDataset[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tconst datasetsInfo = this.listOfDatasets.map((dataset) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: dataset.id,\n\t\t\t\t\t\tkind: dataset.kind,\n\t\t\t\t\t\tnumRows: dataset.sections.length,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tresolve(datasetsInfo);\n\t\t\t} catch (error) {\n\t\t\t\treject(new Error(\"An error occurred while listing datasets.\"));\n\t\t\t}\n\t\t});\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d317e39abfc7c570aa9feacead078e37b6d3ebbb","contentHash":"ec15943767abd81b74c7165c8533ebae00d13c686500005e18b3def59a847a19"},"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/datasetUtils.ts":{"path":"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/datasetUtils.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":0},"end":{"line":29,"column":145}},"28":{"start":{"line":30,"column":16},"end":{"line":30,"column":49}},"29":{"start":{"line":31,"column":18},"end":{"line":31,"column":38}},"30":{"start":{"line":32,"column":11},"end":{"line":32,"column":38}},"31":{"start":{"line":33,"column":13},"end":{"line":33,"column":42}},"32":{"start":{"line":34,"column":25},"end":{"line":34,"column":52}},"33":{"start":{"line":35,"column":0},"end":{"line":35,"column":30}},"34":{"start":{"line":37,"column":25},"end":{"line":37,"column":71}},"35":{"start":{"line":38,"column":18},"end":{"line":38,"column":126}},"36":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"37":{"start":{"line":40,"column":8},"end":{"line":40,"column":38}},"38":{"start":{"line":42,"column":16},"end":{"line":42,"column":37}},"39":{"start":{"line":43,"column":4},"end":{"line":49,"column":5}},"40":{"start":{"line":44,"column":8},"end":{"line":44,"column":42}},"41":{"start":{"line":45,"column":8},"end":{"line":45,"column":20}},"42":{"start":{"line":48,"column":8},"end":{"line":48,"column":21}},"43":{"start":{"line":51,"column":0},"end":{"line":51,"column":34}},"44":{"start":{"line":53,"column":4},"end":{"line":62,"column":5}},"45":{"start":{"line":54,"column":20},"end":{"line":54,"column":49}},"46":{"start":{"line":55,"column":30},"end":{"line":55,"column":68}},"47":{"start":{"line":56,"column":24},"end":{"line":56,"column":74}},"48":{"start":{"line":57,"column":8},"end":{"line":57,"column":64}},"49":{"start":{"line":60,"column":8},"end":{"line":60,"column":58}},"50":{"start":{"line":61,"column":8},"end":{"line":61,"column":66}},"51":{"start":{"line":64,"column":0},"end":{"line":64,"column":42}},"52":{"start":{"line":66,"column":25},"end":{"line":66,"column":71}},"53":{"start":{"line":67,"column":16},"end":{"line":67,"column":37}},"54":{"start":{"line":68,"column":4},"end":{"line":68,"column":38}},"55":{"start":{"line":69,"column":4},"end":{"line":69,"column":15}},"56":{"start":{"line":72,"column":26},"end":{"line":72,"column":47}},"57":{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},"58":{"start":{"line":74,"column":8},"end":{"line":74,"column":59}},"59":{"start":{"line":76,"column":22},"end":{"line":76,"column":48}},"60":{"start":{"line":77,"column":27},"end":{"line":77,"column":116}},"61":{"start":{"line":78,"column":25},"end":{"line":78,"column":89}},"62":{"start":{"line":78,"column":67},"end":{"line":78,"column":87}},"63":{"start":{"line":79,"column":26},"end":{"line":79,"column":28}},"64":{"start":{"line":80,"column":4},"end":{"line":97,"column":5}},"65":{"start":{"line":82,"column":8},"end":{"line":88,"column":9}},"66":{"start":{"line":83,"column":12},"end":{"line":83,"column":50}},"67":{"start":{"line":86,"column":12},"end":{"line":86,"column":64}},"68":{"start":{"line":87,"column":12},"end":{"line":87,"column":21}},"69":{"start":{"line":89,"column":8},"end":{"line":96,"column":9}},"70":{"start":{"line":90,"column":12},"end":{"line":95,"column":13}},"71":{"start":{"line":91,"column":16},"end":{"line":94,"column":17}},"72":{"start":{"line":91,"column":52},"end":{"line":91,"column":104}},"73":{"start":{"line":92,"column":39},"end":{"line":92,"column":65}},"74":{"start":{"line":93,"column":20},"end":{"line":93,"column":51}},"75":{"start":{"line":98,"column":4},"end":{"line":98,"column":25}},"76":{"start":{"line":101,"column":4},"end":{"line":105,"column":5}},"77":{"start":{"line":102,"column":24},"end":{"line":102,"column":122}},"78":{"start":{"line":103,"column":8},"end":{"line":103,"column":46}},"79":{"start":{"line":104,"column":8},"end":{"line":104,"column":23}},"80":{"start":{"line":106,"column":4},"end":{"line":106,"column":16}},"81":{"start":{"line":109,"column":4},"end":{"line":115,"column":5}},"82":{"start":{"line":110,"column":8},"end":{"line":110,"column":208}},"83":{"start":{"line":113,"column":8},"end":{"line":113,"column":64}},"84":{"start":{"line":114,"column":8},"end":{"line":114,"column":20}},"85":{"start":{"line":118,"column":4},"end":{"line":140,"column":5}},"86":{"start":{"line":119,"column":25},"end":{"line":119,"column":27}},"87":{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},"88":{"start":{"line":121,"column":12},"end":{"line":121,"column":70}},"89":{"start":{"line":123,"column":22},"end":{"line":123,"column":47}},"90":{"start":{"line":124,"column":26},"end":{"line":124,"column":80}},"91":{"start":{"line":124,"column":49},"end":{"line":124,"column":79}},"92":{"start":{"line":125,"column":8},"end":{"line":134,"column":9}},"93":{"start":{"line":126,"column":29},"end":{"line":126,"column":80}},"94":{"start":{"line":127,"column":32},"end":{"line":127,"column":52}},"95":{"start":{"line":128,"column":30},"end":{"line":128,"column":58}},"96":{"start":{"line":129,"column":29},"end":{"line":131,"column":14}},"97":{"start":{"line":130,"column":16},"end":{"line":130,"column":230}},"98":{"start":{"line":132,"column":28},"end":{"line":132,"column":133}},"99":{"start":{"line":133,"column":12},"end":{"line":133,"column":35}},"100":{"start":{"line":135,"column":8},"end":{"line":135,"column":41}},"101":{"start":{"line":138,"column":8},"end":{"line":138,"column":80}},"102":{"start":{"line":139,"column":8},"end":{"line":139,"column":37}},"103":{"start":{"line":142,"column":0},"end":{"line":142,"column":62}},"104":{"start":{"line":144,"column":4},"end":{"line":146,"column":5}},"105":{"start":{"line":145,"column":8},"end":{"line":145,"column":41}},"106":{"start":{"line":147,"column":20},"end":{"line":147,"column":30}},"107":{"start":{"line":148,"column":21},"end":{"line":148,"column":71}},"108":{"start":{"line":149,"column":21},"end":{"line":149,"column":44}},"109":{"start":{"line":150,"column":4},"end":{"line":159,"column":7}},"110":{"start":{"line":151,"column":8},"end":{"line":158,"column":11}},"111":{"start":{"line":152,"column":12},"end":{"line":157,"column":13}},"112":{"start":{"line":153,"column":16},"end":{"line":153,"column":69}},"113":{"start":{"line":156,"column":16},"end":{"line":156,"column":26}},"114":{"start":{"line":161,"column":0},"end":{"line":161,"column":56}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"isBase64Zip","decl":{"start":{"line":36,"column":15},"end":{"line":36,"column":26}},"loc":{"start":{"line":36,"column":36},"end":{"line":50,"column":1}},"line":36},"8":{"name":"validateDataset","decl":{"start":{"line":52,"column":15},"end":{"line":52,"column":30}},"loc":{"start":{"line":52,"column":44},"end":{"line":63,"column":1}},"line":52},"9":{"name":"loadZipContent","decl":{"start":{"line":65,"column":15},"end":{"line":65,"column":29}},"loc":{"start":{"line":65,"column":39},"end":{"line":70,"column":1}},"line":65},"10":{"name":"extractValidSectionsFromZip","decl":{"start":{"line":71,"column":15},"end":{"line":71,"column":42}},"loc":{"start":{"line":71,"column":48},"end":{"line":99,"column":1}},"line":71},"11":{"name":"(anonymous_11)","decl":{"start":{"line":78,"column":57},"end":{"line":78,"column":58}},"loc":{"start":{"line":78,"column":67},"end":{"line":78,"column":87}},"line":78},"12":{"name":"(anonymous_12)","decl":{"start":{"line":91,"column":41},"end":{"line":91,"column":42}},"loc":{"start":{"line":91,"column":52},"end":{"line":91,"column":104}},"line":91},"13":{"name":"createDatasetFromSections","decl":{"start":{"line":100,"column":15},"end":{"line":100,"column":40}},"loc":{"start":{"line":100,"column":55},"end":{"line":107,"column":1}},"line":100},"14":{"name":"mapSectionToClass","decl":{"start":{"line":108,"column":9},"end":{"line":108,"column":26}},"loc":{"start":{"line":108,"column":36},"end":{"line":116,"column":1}},"line":108},"15":{"name":"loadDatasetsFromDirectory","decl":{"start":{"line":117,"column":15},"end":{"line":117,"column":40}},"loc":{"start":{"line":117,"column":52},"end":{"line":141,"column":1}},"line":117},"16":{"name":"(anonymous_16)","decl":{"start":{"line":124,"column":39},"end":{"line":124,"column":40}},"loc":{"start":{"line":124,"column":49},"end":{"line":124,"column":79}},"line":124},"17":{"name":"(anonymous_17)","decl":{"start":{"line":129,"column":54},"end":{"line":129,"column":55}},"loc":{"start":{"line":129,"column":71},"end":{"line":131,"column":13}},"line":129},"18":{"name":"saveDatasetToDirectory","decl":{"start":{"line":143,"column":15},"end":{"line":143,"column":37}},"loc":{"start":{"line":143,"column":47},"end":{"line":160,"column":1}},"line":143},"19":{"name":"(anonymous_19)","decl":{"start":{"line":150,"column":23},"end":{"line":150,"column":24}},"loc":{"start":{"line":150,"column":44},"end":{"line":159,"column":5}},"line":150},"20":{"name":"(anonymous_20)","decl":{"start":{"line":151,"column":49},"end":{"line":151,"column":50}},"loc":{"start":{"line":151,"column":60},"end":{"line":158,"column":9}},"line":151}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26},"19":{"loc":{"start":{"line":38,"column":18},"end":{"line":38,"column":126}},"type":"binary-expr","locations":[{"start":{"line":38,"column":18},"end":{"line":38,"column":42}},{"start":{"line":38,"column":46},"end":{"line":38,"column":70}},{"start":{"line":38,"column":74},"end":{"line":38,"column":98}},{"start":{"line":38,"column":102},"end":{"line":38,"column":126}}],"line":38},"20":{"loc":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},{"start":{"line":39,"column":4},"end":{"line":41,"column":5}}],"line":39},"21":{"loc":{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},{"start":{"line":73,"column":4},"end":{"line":75,"column":5}}],"line":73},"22":{"loc":{"start":{"line":89,"column":8},"end":{"line":96,"column":9}},"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":96,"column":9}},{"start":{"line":89,"column":8},"end":{"line":96,"column":9}}],"line":89},"23":{"loc":{"start":{"line":91,"column":16},"end":{"line":94,"column":17}},"type":"if","locations":[{"start":{"line":91,"column":16},"end":{"line":94,"column":17}},{"start":{"line":91,"column":16},"end":{"line":94,"column":17}}],"line":91},"24":{"loc":{"start":{"line":101,"column":4},"end":{"line":105,"column":5}},"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":105,"column":5}},{"start":{"line":101,"column":4},"end":{"line":105,"column":5}}],"line":101},"25":{"loc":{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},"type":"if","locations":[{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},{"start":{"line":120,"column":8},"end":{"line":122,"column":9}}],"line":120},"26":{"loc":{"start":{"line":144,"column":4},"end":{"line":146,"column":5}},"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":146,"column":5}},{"start":{"line":144,"column":4},"end":{"line":146,"column":5}}],"line":144},"27":{"loc":{"start":{"line":152,"column":12},"end":{"line":157,"column":13}},"type":"if","locations":[{"start":{"line":152,"column":12},"end":{"line":157,"column":13}},{"start":{"line":152,"column":12},"end":{"line":157,"column":13}}],"line":152}},"s":{"0":1,"1":119,"2":119,"3":119,"4":119,"5":114,"6":109,"7":119,"8":0,"9":0,"10":0,"11":1,"12":2,"13":0,"14":1,"15":2,"16":0,"17":2,"18":2,"19":2,"20":119,"21":119,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":31,"35":31,"36":31,"37":2,"38":29,"39":29,"40":29,"41":28,"42":1,"43":1,"44":29,"45":29,"46":29,"47":29,"48":29,"49":0,"50":0,"51":1,"52":29,"53":29,"54":29,"55":29,"56":29,"57":29,"58":0,"59":29,"60":29,"61":29,"62":23832,"63":29,"64":29,"65":23832,"66":23832,"67":23,"68":23,"69":23809,"70":23809,"71":259416,"72":2594109,"73":259404,"74":259404,"75":29,"76":29,"77":17,"78":17,"79":17,"80":12,"81":259404,"82":259404,"83":0,"84":0,"85":25,"86":25,"87":25,"88":0,"89":25,"90":25,"91":2,"92":25,"93":2,"94":2,"95":2,"96":2,"97":64731,"98":2,"99":2,"100":25,"101":0,"102":0,"103":1,"104":17,"105":0,"106":17,"107":17,"108":17,"109":17,"110":17,"111":17,"112":0,"113":17,"114":1},"f":{"0":119,"1":109,"2":0,"3":2,"4":0,"5":2,"6":1,"7":31,"8":29,"9":29,"10":29,"11":23832,"12":2594109,"13":29,"14":259404,"15":25,"16":2,"17":64731,"18":17,"19":17,"20":17},"b":{"0":[1,1,1],"1":[1,0],"2":[119,0],"3":[114,5],"4":[119,119],"5":[5,114],"6":[114,5],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,2],"12":[2,2],"13":[2,0],"14":[119,0],"15":[119,119],"16":[1,1,1],"17":[0,1],"18":[1,1],"19":[31,30,30,29],"20":[2,29],"21":[0,29],"22":[23809,0],"23":[259404,12],"24":[17,12],"25":[0,25],"26":[0,17],"27":[0,17]},"inputSourceMap":{"version":3,"file":"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/datasetUtils.ts","sources":["/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/datasetUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import JSZip from \"jszip\";\nimport {Dataset, Section} from \"./Dataset\";\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nimport {InsightDatasetKind} from \"./IInsightFacade\";\n\nexport const persistDir = \"./data\";\n\n//\tcheck if content string is base 64 ZIP\nexport async function isBase64Zip(content: string): Promise<boolean> {\n\t//\tdecode the string\n\tconst decodedBytes: Uint8Array = new Uint8Array(Buffer.from(content, \"base64\"));\n\n\t// check first 4 bytes against ZIP signature\n\tconst isZIP =\n\t\tdecodedBytes[0] === 0x50 && decodedBytes[1] === 0x4b && decodedBytes[2] === 0x03 && decodedBytes[3] === 0x04;\n\n\tif (!isZIP) {\n\t\treturn Promise.resolve(false);\n\t}\n\n\t// validate ZIP content\n\tconst zip = new JSZip();\n\ttry {\n\t\tawait zip.loadAsync(decodedBytes);\n\t\t//\tloaded successfully, valid ZIP\n\t\treturn true;\n\t} catch (error) {\n\t\t//\tload failed, corrupted or not ZIP\n\t\treturn false;\n\t}\n}\n\n//\tcitation: Structure of JSZip decode from consultation with Chat GTP\nexport async function validateDataset(\n\tcontent: string,\n\tid: string\n): Promise<{success: boolean; dataset: Dataset | null}> {\n\ttry {\n\t\tconst zip = await loadZipContent(content);\n\t\tconst validSections = await extractValidSectionsFromZip(zip);\n\t\tconst dataset = await createDatasetFromSections(id, validSections);\n\n\t\treturn Promise.resolve({success: !!dataset, dataset});\n\t} catch (error) {\n\t\tconsole.error(\"Error in validateDataset:\", error);\n\t\treturn Promise.resolve({success: false, dataset: null});\n\t}\n}\n\nasync function loadZipContent(content: string): Promise<JSZip> {\n\tconst decodedBytes: Uint8Array = new Uint8Array(Buffer.from(content, \"base64\"));\n\tconst zip = new JSZip();\n\tawait zip.loadAsync(decodedBytes);\n\treturn zip;\n}\n\nasync function extractValidSectionsFromZip(zip: JSZip): Promise<Section[]> {\n\tconst coursesFolder = zip.folder(\"courses\");\n\tif (!coursesFolder) {\n\t\tthrow new Error(\"Courses folder not found in zip\");\n\t}\n\tconst jsonFiles = coursesFolder.file(/^.*$/);\n\tconst requiredFields = [\"id\", \"Course\", \"Title\", \"Professor\", \"Subject\", \"Year\", \"Avg\", \"Pass\", \"Fail\", \"Audit\"];\n\tconst fileContents = await Promise.all(jsonFiles.map((file) => file.async(\"string\")));\n\tconst validSections: Section[] = [];\n\n\tfor (let fileContent of fileContents) {\n\t\tlet jsonContent;\n\t\ttry {\n\t\t\tjsonContent = JSON.parse(fileContent);\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error parsing JSON content:\", error);\n\t\t\tcontinue;\n\t\t}\n\t\tif (jsonContent.result) {\n\t\t\tfor (let section of jsonContent.result) {\n\t\t\t\tif (requiredFields.every((field) => Object.prototype.hasOwnProperty.call(section, field))) {\n\t\t\t\t\tconst curSection: Section = mapSectionToClass(section as any);\n\t\t\t\t\tvalidSections.push(curSection);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn validSections;\n}\n\nasync function createDatasetFromSections(id: string, sections: Section[]): Promise<Dataset | null> {\n\tif (sections.length > 0) {\n\t\tconst dataset = new Dataset(id, sections.length, sections, InsightDatasetKind.Sections);\n\t\tawait saveDatasetToDirectory(dataset);\n\t\treturn dataset;\n\t}\n\treturn null;\n}\n\n// mapSectionToClass function with error handling\nfunction mapSectionToClass(section: any): Section {\n\ttry {\n\t\treturn new Section(\n\t\t\tString(section.id),\n\t\t\tsection.Course,\n\t\t\tsection.Title,\n\t\t\tsection.Professor,\n\t\t\tsection.Subject,\n\t\t\tparseInt(section.Year, 10),\n\t\t\tsection.Avg,\n\t\t\tsection.Pass,\n\t\t\tsection.Fail,\n\t\t\tsection.Audit\n\t\t);\n\t} catch (error) {\n\t\tconsole.error(\"Error mapping section to class:\", error);\n\t\tthrow error;\n\t}\n}\n\n// loadDatasetsFromDirectory function with enhanced error handling\nexport async function loadDatasetsFromDirectory(directory: string): Promise<Dataset[]> {\n\ttry {\n\t\tconst datasets: Dataset[] = [];\n\t\tif (!fs.existsSync(directory)) {\n\t\t\tthrow new Error(`Directory ${directory} does not exist.`);\n\t\t}\n\t\tconst files = fs.readdirSync(directory);\n\t\tconst jsonFiles = files.filter((file) => path.extname(file) === \".json\");\n\t\tfor (const file of jsonFiles) {\n\t\t\tconst jsonData = fs.readFileSync(path.join(directory, file), \"utf8\");\n\t\t\tconst datasetData = JSON.parse(jsonData);\n\t\t\tconst datasetId = path.basename(file, \".json\");\n\t\t\tconst sections = datasetData.sections.map((sectionData: any) => {\n\t\t\t\treturn new Section(\n\t\t\t\t\tsectionData.uuid,\n\t\t\t\t\tsectionData.id,\n\t\t\t\t\tsectionData.title,\n\t\t\t\t\tsectionData.instructor,\n\t\t\t\t\tsectionData.dept,\n\t\t\t\t\tsectionData.year,\n\t\t\t\t\tsectionData.avg,\n\t\t\t\t\tsectionData.pass,\n\t\t\t\t\tsectionData.fail,\n\t\t\t\t\tsectionData.audit\n\t\t\t\t);\n\t\t\t});\n\t\t\tconst dataset = new Dataset(datasetId, sections.length, sections, InsightDatasetKind.Sections);\n\t\t\tdatasets.push(dataset);\n\t\t}\n\t\treturn Promise.resolve(datasets);\n\t} catch (error) {\n\t\tconsole.error(\"Error loading datasets from directory ${error.message}\");\n\t\treturn Promise.reject(error);\n\t}\n}\n\n//\tgiven a Dataset Class Parse it into JSON and save in ./data folder\nexport async function saveDatasetToDirectory(dataset: Dataset): Promise<void> {\n\t// Ensure the ./data directory exists\n\tif (!fs.existsSync(persistDir)) {\n\t\tfs.mkdirSync(persistDir);\n\t}\n\n\tlet datasetId = dataset.id;\n\n\tconst filePath = path.join(persistDir, `${datasetId}.json`);\n\tconst jsonData = JSON.stringify(dataset);\n\n\treturn new Promise((resolve, reject) => {\n\t\tfs.writeFile(filePath, jsonData, \"utf8\", (error) => {\n\t\t\tif (error) {\n\t\t\t\treject(new Error(\"Failed to save dataset to disk.\"));\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t});\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bdf5194f5a2ba6ed83176848414346a5736fb995","contentHash":"2293d2dcceb59ce45f9539acebdfc8063d36aa908c7742ee154c22689fd955de"},"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/Validator.ts":{"path":"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/Validator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":20},"end":{"line":5,"column":42}},"4":{"start":{"line":11,"column":8},"end":{"line":11,"column":33}},"5":{"start":{"line":12,"column":8},"end":{"line":12,"column":31}},"6":{"start":{"line":15,"column":20},"end":{"line":15,"column":33}},"7":{"start":{"line":16,"column":25},"end":{"line":16,"column":41}},"8":{"start":{"line":17,"column":8},"end":{"line":61,"column":9}},"9":{"start":{"line":18,"column":12},"end":{"line":20,"column":13}},"10":{"start":{"line":19,"column":16},"end":{"line":19,"column":74}},"11":{"start":{"line":21,"column":12},"end":{"line":26,"column":13}},"12":{"start":{"line":22,"column":27},"end":{"line":22,"column":45}},"13":{"start":{"line":23,"column":16},"end":{"line":25,"column":17}},"14":{"start":{"line":24,"column":20},"end":{"line":24,"column":55}},"15":{"start":{"line":28,"column":13},"end":{"line":61,"column":9}},"16":{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},"17":{"start":{"line":30,"column":16},"end":{"line":30,"column":69}},"18":{"start":{"line":32,"column":12},"end":{"line":37,"column":13}},"19":{"start":{"line":33,"column":27},"end":{"line":33,"column":45}},"20":{"start":{"line":34,"column":16},"end":{"line":36,"column":17}},"21":{"start":{"line":35,"column":20},"end":{"line":35,"column":55}},"22":{"start":{"line":39,"column":13},"end":{"line":61,"column":9}},"23":{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},"24":{"start":{"line":41,"column":16},"end":{"line":41,"column":62}},"25":{"start":{"line":43,"column":12},"end":{"line":51,"column":13}},"26":{"start":{"line":44,"column":29},"end":{"line":44,"column":49}},"27":{"start":{"line":45,"column":16},"end":{"line":50,"column":17}},"28":{"start":{"line":45,"column":42},"end":{"line":45,"column":61}},"29":{"start":{"line":46,"column":20},"end":{"line":46,"column":69}},"30":{"start":{"line":49,"column":20},"end":{"line":49,"column":75}},"31":{"start":{"line":52,"column":29},"end":{"line":52,"column":49}},"32":{"start":{"line":53,"column":24},"end":{"line":53,"column":35}},"33":{"start":{"line":54,"column":23},"end":{"line":54,"column":57}},"34":{"start":{"line":55,"column":12},"end":{"line":57,"column":13}},"35":{"start":{"line":56,"column":16},"end":{"line":56,"column":51}},"36":{"start":{"line":60,"column":12},"end":{"line":60,"column":59}},"37":{"start":{"line":62,"column":8},"end":{"line":62,"column":37}},"38":{"start":{"line":65,"column":20},"end":{"line":65,"column":33}},"39":{"start":{"line":66,"column":25},"end":{"line":66,"column":41}},"40":{"start":{"line":67,"column":8},"end":{"line":107,"column":9}},"41":{"start":{"line":68,"column":28},"end":{"line":68,"column":47}},"42":{"start":{"line":69,"column":12},"end":{"line":71,"column":13}},"43":{"start":{"line":70,"column":16},"end":{"line":70,"column":61}},"44":{"start":{"line":72,"column":12},"end":{"line":103,"column":13}},"45":{"start":{"line":72,"column":40},"end":{"line":72,"column":66}},"46":{"start":{"line":73,"column":16},"end":{"line":78,"column":17}},"47":{"start":{"line":74,"column":33},"end":{"line":74,"column":56}},"48":{"start":{"line":75,"column":20},"end":{"line":77,"column":21}},"49":{"start":{"line":76,"column":24},"end":{"line":76,"column":59}},"50":{"start":{"line":79,"column":16},"end":{"line":79,"column":65}},"51":{"start":{"line":81,"column":17},"end":{"line":103,"column":13}},"52":{"start":{"line":81,"column":45},"end":{"line":81,"column":99}},"53":{"start":{"line":82,"column":16},"end":{"line":89,"column":17}},"54":{"start":{"line":83,"column":20},"end":{"line":88,"column":21}},"55":{"start":{"line":84,"column":37},"end":{"line":84,"column":60}},"56":{"start":{"line":85,"column":24},"end":{"line":87,"column":25}},"57":{"start":{"line":86,"column":28},"end":{"line":86,"column":63}},"58":{"start":{"line":90,"column":16},"end":{"line":97,"column":17}},"59":{"start":{"line":91,"column":20},"end":{"line":96,"column":21}},"60":{"start":{"line":92,"column":37},"end":{"line":92,"column":58}},"61":{"start":{"line":93,"column":24},"end":{"line":95,"column":25}},"62":{"start":{"line":94,"column":28},"end":{"line":94,"column":63}},"63":{"start":{"line":98,"column":16},"end":{"line":98,"column":51}},"64":{"start":{"line":99,"column":16},"end":{"line":99,"column":49}},"65":{"start":{"line":102,"column":16},"end":{"line":102,"column":82}},"66":{"start":{"line":106,"column":12},"end":{"line":106,"column":56}},"67":{"start":{"line":108,"column":8},"end":{"line":108,"column":37}},"68":{"start":{"line":111,"column":8},"end":{"line":121,"column":9}},"69":{"start":{"line":111,"column":49},"end":{"line":111,"column":81}},"70":{"start":{"line":112,"column":12},"end":{"line":116,"column":13}},"71":{"start":{"line":113,"column":16},"end":{"line":115,"column":17}},"72":{"start":{"line":114,"column":20},"end":{"line":114,"column":29}},"73":{"start":{"line":117,"column":12},"end":{"line":117,"column":21}},"74":{"start":{"line":120,"column":12},"end":{"line":120,"column":21}},"75":{"start":{"line":124,"column":20},"end":{"line":124,"column":33}},"76":{"start":{"line":125,"column":25},"end":{"line":125,"column":41}},"77":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"78":{"start":{"line":127,"column":12},"end":{"line":127,"column":76}},"79":{"start":{"line":129,"column":8},"end":{"line":133,"column":9}},"80":{"start":{"line":130,"column":12},"end":{"line":132,"column":13}},"81":{"start":{"line":131,"column":16},"end":{"line":131,"column":45}},"82":{"start":{"line":134,"column":8},"end":{"line":134,"column":60}},"83":{"start":{"line":137,"column":20},"end":{"line":137,"column":33}},"84":{"start":{"line":138,"column":25},"end":{"line":138,"column":41}},"85":{"start":{"line":139,"column":8},"end":{"line":141,"column":9}},"86":{"start":{"line":140,"column":12},"end":{"line":140,"column":54}},"87":{"start":{"line":142,"column":8},"end":{"line":158,"column":9}},"88":{"start":{"line":143,"column":12},"end":{"line":145,"column":13}},"89":{"start":{"line":144,"column":16},"end":{"line":144,"column":66}},"90":{"start":{"line":146,"column":12},"end":{"line":157,"column":13}},"91":{"start":{"line":147,"column":33},"end":{"line":147,"column":57}},"92":{"start":{"line":148,"column":32},"end":{"line":148,"column":43}},"93":{"start":{"line":149,"column":16},"end":{"line":149,"column":50}},"94":{"start":{"line":150,"column":28},"end":{"line":150,"column":39}},"95":{"start":{"line":151,"column":16},"end":{"line":153,"column":17}},"96":{"start":{"line":152,"column":20},"end":{"line":152,"column":84}},"97":{"start":{"line":156,"column":16},"end":{"line":156,"column":81}},"98":{"start":{"line":159,"column":30},"end":{"line":159,"column":70}},"99":{"start":{"line":160,"column":8},"end":{"line":160,"column":51}},"100":{"start":{"line":161,"column":8},"end":{"line":161,"column":37}},"101":{"start":{"line":164,"column":20},"end":{"line":164,"column":33}},"102":{"start":{"line":165,"column":25},"end":{"line":165,"column":41}},"103":{"start":{"line":166,"column":8},"end":{"line":202,"column":9}},"104":{"start":{"line":167,"column":25},"end":{"line":167,"column":36}},"105":{"start":{"line":168,"column":28},"end":{"line":168,"column":41}},"106":{"start":{"line":169,"column":12},"end":{"line":201,"column":13}},"107":{"start":{"line":170,"column":33},"end":{"line":170,"column":47}},"108":{"start":{"line":171,"column":29},"end":{"line":171,"column":40}},"109":{"start":{"line":172,"column":16},"end":{"line":172,"column":47}},"110":{"start":{"line":173,"column":28},"end":{"line":173,"column":39}},"111":{"start":{"line":174,"column":16},"end":{"line":197,"column":17}},"112":{"start":{"line":175,"column":20},"end":{"line":182,"column":21}},"113":{"start":{"line":176,"column":24},"end":{"line":178,"column":25}},"114":{"start":{"line":177,"column":28},"end":{"line":177,"column":83}},"115":{"start":{"line":181,"column":24},"end":{"line":181,"column":79}},"116":{"start":{"line":184,"column":21},"end":{"line":197,"column":17}},"117":{"start":{"line":185,"column":20},"end":{"line":196,"column":21}},"118":{"start":{"line":186,"column":24},"end":{"line":188,"column":25}},"119":{"start":{"line":187,"column":28},"end":{"line":187,"column":83}},"120":{"start":{"line":189,"column":35},"end":{"line":189,"column":62}},"121":{"start":{"line":190,"column":24},"end":{"line":192,"column":25}},"122":{"start":{"line":191,"column":28},"end":{"line":191,"column":63}},"123":{"start":{"line":195,"column":24},"end":{"line":195,"column":73}},"124":{"start":{"line":200,"column":16},"end":{"line":200,"column":86}},"125":{"start":{"line":203,"column":8},"end":{"line":203,"column":37}},"126":{"start":{"line":206,"column":8},"end":{"line":208,"column":9}},"127":{"start":{"line":207,"column":12},"end":{"line":207,"column":41}},"128":{"start":{"line":209,"column":8},"end":{"line":213,"column":9}},"129":{"start":{"line":210,"column":12},"end":{"line":212,"column":13}},"130":{"start":{"line":211,"column":16},"end":{"line":211,"column":69}},"131":{"start":{"line":214,"column":8},"end":{"line":219,"column":9}},"132":{"start":{"line":214,"column":21},"end":{"line":214,"column":22}},"133":{"start":{"line":215,"column":25},"end":{"line":215,"column":43}},"134":{"start":{"line":216,"column":12},"end":{"line":218,"column":13}},"135":{"start":{"line":217,"column":16},"end":{"line":217,"column":72}},"136":{"start":{"line":220,"column":8},"end":{"line":220,"column":37}},"137":{"start":{"line":223,"column":0},"end":{"line":223,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":26},"end":{"line":13,"column":5}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":21},"end":{"line":63,"column":5}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":45,"column":35},"end":{"line":45,"column":36}},"loc":{"start":{"line":45,"column":42},"end":{"line":45,"column":61}},"line":45},"3":{"name":"(anonymous_3)","decl":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}},"loc":{"start":{"line":64,"column":26},"end":{"line":109,"column":5}},"line":64},"4":{"name":"(anonymous_4)","decl":{"start":{"line":72,"column":31},"end":{"line":72,"column":32}},"loc":{"start":{"line":72,"column":40},"end":{"line":72,"column":66}},"line":72},"5":{"name":"(anonymous_5)","decl":{"start":{"line":81,"column":36},"end":{"line":81,"column":37}},"loc":{"start":{"line":81,"column":45},"end":{"line":81,"column":99}},"line":81},"6":{"name":"(anonymous_6)","decl":{"start":{"line":110,"column":4},"end":{"line":110,"column":5}},"loc":{"start":{"line":110,"column":27},"end":{"line":122,"column":5}},"line":110},"7":{"name":"(anonymous_7)","decl":{"start":{"line":111,"column":36},"end":{"line":111,"column":37}},"loc":{"start":{"line":111,"column":49},"end":{"line":111,"column":81}},"line":111},"8":{"name":"(anonymous_8)","decl":{"start":{"line":123,"column":4},"end":{"line":123,"column":5}},"loc":{"start":{"line":123,"column":24},"end":{"line":135,"column":5}},"line":123},"9":{"name":"(anonymous_9)","decl":{"start":{"line":136,"column":4},"end":{"line":136,"column":5}},"loc":{"start":{"line":136,"column":26},"end":{"line":162,"column":5}},"line":136},"10":{"name":"(anonymous_10)","decl":{"start":{"line":163,"column":4},"end":{"line":163,"column":5}},"loc":{"start":{"line":163,"column":31},"end":{"line":204,"column":5}},"line":163},"11":{"name":"(anonymous_11)","decl":{"start":{"line":205,"column":4},"end":{"line":205,"column":5}},"loc":{"start":{"line":205,"column":28},"end":{"line":221,"column":5}},"line":205}},"branchMap":{"0":{"loc":{"start":{"line":17,"column":8},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":61,"column":9}},{"start":{"line":17,"column":8},"end":{"line":61,"column":9}}],"line":17},"1":{"loc":{"start":{"line":18,"column":12},"end":{"line":20,"column":13}},"type":"if","locations":[{"start":{"line":18,"column":12},"end":{"line":20,"column":13}},{"start":{"line":18,"column":12},"end":{"line":20,"column":13}}],"line":18},"2":{"loc":{"start":{"line":18,"column":37},"end":{"line":18,"column":43}},"type":"binary-expr","locations":[{"start":{"line":18,"column":37},"end":{"line":18,"column":38}},{"start":{"line":18,"column":42},"end":{"line":18,"column":43}}],"line":18},"3":{"loc":{"start":{"line":23,"column":16},"end":{"line":25,"column":17}},"type":"if","locations":[{"start":{"line":23,"column":16},"end":{"line":25,"column":17}},{"start":{"line":23,"column":16},"end":{"line":25,"column":17}}],"line":23},"4":{"loc":{"start":{"line":28,"column":13},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":28,"column":13},"end":{"line":61,"column":9}},{"start":{"line":28,"column":13},"end":{"line":61,"column":9}}],"line":28},"5":{"loc":{"start":{"line":28,"column":17},"end":{"line":28,"column":63}},"type":"binary-expr","locations":[{"start":{"line":28,"column":17},"end":{"line":28,"column":30}},{"start":{"line":28,"column":34},"end":{"line":28,"column":46}},{"start":{"line":28,"column":50},"end":{"line":28,"column":63}}],"line":28},"6":{"loc":{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},"type":"if","locations":[{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},{"start":{"line":29,"column":12},"end":{"line":31,"column":13}}],"line":29},"7":{"loc":{"start":{"line":34,"column":16},"end":{"line":36,"column":17}},"type":"if","locations":[{"start":{"line":34,"column":16},"end":{"line":36,"column":17}},{"start":{"line":34,"column":16},"end":{"line":36,"column":17}}],"line":34},"8":{"loc":{"start":{"line":39,"column":13},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":13},"end":{"line":61,"column":9}},{"start":{"line":39,"column":13},"end":{"line":61,"column":9}}],"line":39},"9":{"loc":{"start":{"line":39,"column":17},"end":{"line":39,"column":77}},"type":"binary-expr","locations":[{"start":{"line":39,"column":17},"end":{"line":39,"column":29}},{"start":{"line":39,"column":33},"end":{"line":39,"column":45}},{"start":{"line":39,"column":49},"end":{"line":39,"column":61}},{"start":{"line":39,"column":65},"end":{"line":39,"column":77}}],"line":39},"10":{"loc":{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},"type":"if","locations":[{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},{"start":{"line":40,"column":12},"end":{"line":42,"column":13}}],"line":40},"11":{"loc":{"start":{"line":43,"column":12},"end":{"line":51,"column":13}},"type":"if","locations":[{"start":{"line":43,"column":12},"end":{"line":51,"column":13}},{"start":{"line":43,"column":12},"end":{"line":51,"column":13}}],"line":43},"12":{"loc":{"start":{"line":45,"column":16},"end":{"line":50,"column":17}},"type":"if","locations":[{"start":{"line":45,"column":16},"end":{"line":50,"column":17}},{"start":{"line":45,"column":16},"end":{"line":50,"column":17}}],"line":45},"13":{"loc":{"start":{"line":52,"column":29},"end":{"line":52,"column":49}},"type":"cond-expr","locations":[{"start":{"line":52,"column":44},"end":{"line":52,"column":45}},{"start":{"line":52,"column":48},"end":{"line":52,"column":49}}],"line":52},"14":{"loc":{"start":{"line":55,"column":12},"end":{"line":57,"column":13}},"type":"if","locations":[{"start":{"line":55,"column":12},"end":{"line":57,"column":13}},{"start":{"line":55,"column":12},"end":{"line":57,"column":13}}],"line":55},"15":{"loc":{"start":{"line":67,"column":8},"end":{"line":107,"column":9}},"type":"if","locations":[{"start":{"line":67,"column":8},"end":{"line":107,"column":9}},{"start":{"line":67,"column":8},"end":{"line":107,"column":9}}],"line":67},"16":{"loc":{"start":{"line":69,"column":12},"end":{"line":71,"column":13}},"type":"if","locations":[{"start":{"line":69,"column":12},"end":{"line":71,"column":13}},{"start":{"line":69,"column":12},"end":{"line":71,"column":13}}],"line":69},"17":{"loc":{"start":{"line":72,"column":12},"end":{"line":103,"column":13}},"type":"if","locations":[{"start":{"line":72,"column":12},"end":{"line":103,"column":13}},{"start":{"line":72,"column":12},"end":{"line":103,"column":13}}],"line":72},"18":{"loc":{"start":{"line":75,"column":20},"end":{"line":77,"column":21}},"type":"if","locations":[{"start":{"line":75,"column":20},"end":{"line":77,"column":21}},{"start":{"line":75,"column":20},"end":{"line":77,"column":21}}],"line":75},"19":{"loc":{"start":{"line":81,"column":17},"end":{"line":103,"column":13}},"type":"if","locations":[{"start":{"line":81,"column":17},"end":{"line":103,"column":13}},{"start":{"line":81,"column":17},"end":{"line":103,"column":13}}],"line":81},"20":{"loc":{"start":{"line":81,"column":45},"end":{"line":81,"column":99}},"type":"binary-expr","locations":[{"start":{"line":81,"column":45},"end":{"line":81,"column":71}},{"start":{"line":81,"column":75},"end":{"line":81,"column":99}}],"line":81},"21":{"loc":{"start":{"line":83,"column":20},"end":{"line":88,"column":21}},"type":"if","locations":[{"start":{"line":83,"column":20},"end":{"line":88,"column":21}},{"start":{"line":83,"column":20},"end":{"line":88,"column":21}}],"line":83},"22":{"loc":{"start":{"line":85,"column":24},"end":{"line":87,"column":25}},"type":"if","locations":[{"start":{"line":85,"column":24},"end":{"line":87,"column":25}},{"start":{"line":85,"column":24},"end":{"line":87,"column":25}}],"line":85},"23":{"loc":{"start":{"line":91,"column":20},"end":{"line":96,"column":21}},"type":"if","locations":[{"start":{"line":91,"column":20},"end":{"line":96,"column":21}},{"start":{"line":91,"column":20},"end":{"line":96,"column":21}}],"line":91},"24":{"loc":{"start":{"line":93,"column":24},"end":{"line":95,"column":25}},"type":"if","locations":[{"start":{"line":93,"column":24},"end":{"line":95,"column":25}},{"start":{"line":93,"column":24},"end":{"line":95,"column":25}}],"line":93},"25":{"loc":{"start":{"line":111,"column":8},"end":{"line":121,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":121,"column":9}},{"start":{"line":111,"column":8},"end":{"line":121,"column":9}}],"line":111},"26":{"loc":{"start":{"line":113,"column":16},"end":{"line":115,"column":17}},"type":"if","locations":[{"start":{"line":113,"column":16},"end":{"line":115,"column":17}},{"start":{"line":113,"column":16},"end":{"line":115,"column":17}}],"line":113},"27":{"loc":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"type":"if","locations":[{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},{"start":{"line":126,"column":8},"end":{"line":128,"column":9}}],"line":126},"28":{"loc":{"start":{"line":130,"column":12},"end":{"line":132,"column":13}},"type":"if","locations":[{"start":{"line":130,"column":12},"end":{"line":132,"column":13}},{"start":{"line":130,"column":12},"end":{"line":132,"column":13}}],"line":130},"29":{"loc":{"start":{"line":139,"column":8},"end":{"line":141,"column":9}},"type":"if","locations":[{"start":{"line":139,"column":8},"end":{"line":141,"column":9}},{"start":{"line":139,"column":8},"end":{"line":141,"column":9}}],"line":139},"30":{"loc":{"start":{"line":143,"column":12},"end":{"line":145,"column":13}},"type":"if","locations":[{"start":{"line":143,"column":12},"end":{"line":145,"column":13}},{"start":{"line":143,"column":12},"end":{"line":145,"column":13}}],"line":143},"31":{"loc":{"start":{"line":146,"column":12},"end":{"line":157,"column":13}},"type":"if","locations":[{"start":{"line":146,"column":12},"end":{"line":157,"column":13}},{"start":{"line":146,"column":12},"end":{"line":157,"column":13}}],"line":146},"32":{"loc":{"start":{"line":151,"column":16},"end":{"line":153,"column":17}},"type":"if","locations":[{"start":{"line":151,"column":16},"end":{"line":153,"column":17}},{"start":{"line":151,"column":16},"end":{"line":153,"column":17}}],"line":151},"33":{"loc":{"start":{"line":166,"column":8},"end":{"line":202,"column":9}},"type":"if","locations":[{"start":{"line":166,"column":8},"end":{"line":202,"column":9}},{"start":{"line":166,"column":8},"end":{"line":202,"column":9}}],"line":166},"34":{"loc":{"start":{"line":169,"column":12},"end":{"line":201,"column":13}},"type":"if","locations":[{"start":{"line":169,"column":12},"end":{"line":201,"column":13}},{"start":{"line":169,"column":12},"end":{"line":201,"column":13}}],"line":169},"35":{"loc":{"start":{"line":174,"column":16},"end":{"line":197,"column":17}},"type":"if","locations":[{"start":{"line":174,"column":16},"end":{"line":197,"column":17}},{"start":{"line":174,"column":16},"end":{"line":197,"column":17}}],"line":174},"36":{"loc":{"start":{"line":175,"column":20},"end":{"line":182,"column":21}},"type":"if","locations":[{"start":{"line":175,"column":20},"end":{"line":182,"column":21}},{"start":{"line":175,"column":20},"end":{"line":182,"column":21}}],"line":175},"37":{"loc":{"start":{"line":176,"column":24},"end":{"line":178,"column":25}},"type":"if","locations":[{"start":{"line":176,"column":24},"end":{"line":178,"column":25}},{"start":{"line":176,"column":24},"end":{"line":178,"column":25}}],"line":176},"38":{"loc":{"start":{"line":184,"column":21},"end":{"line":197,"column":17}},"type":"if","locations":[{"start":{"line":184,"column":21},"end":{"line":197,"column":17}},{"start":{"line":184,"column":21},"end":{"line":197,"column":17}}],"line":184},"39":{"loc":{"start":{"line":185,"column":20},"end":{"line":196,"column":21}},"type":"if","locations":[{"start":{"line":185,"column":20},"end":{"line":196,"column":21}},{"start":{"line":185,"column":20},"end":{"line":196,"column":21}}],"line":185},"40":{"loc":{"start":{"line":186,"column":24},"end":{"line":188,"column":25}},"type":"if","locations":[{"start":{"line":186,"column":24},"end":{"line":188,"column":25}},{"start":{"line":186,"column":24},"end":{"line":188,"column":25}}],"line":186},"41":{"loc":{"start":{"line":190,"column":24},"end":{"line":192,"column":25}},"type":"if","locations":[{"start":{"line":190,"column":24},"end":{"line":192,"column":25}},{"start":{"line":190,"column":24},"end":{"line":192,"column":25}}],"line":190},"42":{"loc":{"start":{"line":206,"column":8},"end":{"line":208,"column":9}},"type":"if","locations":[{"start":{"line":206,"column":8},"end":{"line":208,"column":9}},{"start":{"line":206,"column":8},"end":{"line":208,"column":9}}],"line":206},"43":{"loc":{"start":{"line":209,"column":8},"end":{"line":213,"column":9}},"type":"if","locations":[{"start":{"line":209,"column":8},"end":{"line":213,"column":9}},{"start":{"line":209,"column":8},"end":{"line":213,"column":9}}],"line":209},"44":{"loc":{"start":{"line":210,"column":12},"end":{"line":212,"column":13}},"type":"if","locations":[{"start":{"line":210,"column":12},"end":{"line":212,"column":13}},{"start":{"line":210,"column":12},"end":{"line":212,"column":13}}],"line":210},"45":{"loc":{"start":{"line":216,"column":12},"end":{"line":218,"column":13}},"type":"if","locations":[{"start":{"line":216,"column":12},"end":{"line":218,"column":13}},{"start":{"line":216,"column":12},"end":{"line":218,"column":13}}],"line":216}},"s":{"0":1,"1":1,"2":1,"3":1,"4":74,"5":74,"6":227,"7":225,"8":225,"9":71,"10":5,"11":66,"12":66,"13":66,"14":14,"15":154,"16":47,"17":0,"18":47,"19":88,"20":88,"21":3,"22":107,"23":104,"24":0,"25":104,"26":0,"27":0,"28":0,"29":0,"30":0,"31":104,"32":104,"33":104,"34":104,"35":11,"36":3,"37":189,"38":77,"39":77,"40":77,"41":77,"42":77,"43":2,"44":75,"45":125,"46":21,"47":21,"48":21,"49":3,"50":18,"51":54,"52":107,"53":53,"54":104,"55":52,"56":52,"57":1,"58":52,"59":101,"60":52,"61":52,"62":5,"63":47,"64":47,"65":1,"66":0,"67":65,"68":47,"69":192,"70":45,"71":86,"72":43,"73":2,"74":2,"75":52,"76":52,"77":52,"78":1,"79":51,"80":112,"81":47,"82":4,"83":73,"84":73,"85":73,"86":2,"87":71,"88":174,"89":0,"90":174,"91":174,"92":174,"93":174,"94":174,"95":174,"96":2,"97":0,"98":69,"99":69,"100":69,"101":104,"102":104,"103":104,"104":100,"105":100,"106":100,"107":100,"108":100,"109":100,"110":100,"111":100,"112":66,"113":62,"114":4,"115":4,"116":34,"117":34,"118":33,"119":1,"120":32,"121":32,"122":1,"123":1,"124":0,"125":93,"126":32,"127":0,"128":32,"129":0,"130":0,"131":32,"132":32,"133":63,"134":63,"135":1,"136":31,"137":1},"f":{"0":74,"1":227,"2":0,"3":77,"4":125,"5":107,"6":47,"7":192,"8":52,"9":73,"10":104,"11":32},"b":{"0":[71,154],"1":[5,66],"2":[71,0],"3":[14,52],"4":[47,107],"5":[154,133,121],"6":[0,47],"7":[3,85],"8":[104,3],"9":[107,69,57,38],"10":[0,104],"11":[0,104],"12":[0,0],"13":[35,69],"14":[11,93],"15":[77,0],"16":[2,75],"17":[21,54],"18":[3,18],"19":[53,1],"20":[107,54],"21":[52,52],"22":[1,51],"23":[52,49],"24":[5,47],"25":[45,2],"26":[43,43],"27":[1,51],"28":[47,65],"29":[2,71],"30":[0,174],"31":[174,0],"32":[2,172],"33":[100,4],"34":[100,0],"35":[66,34],"36":[62,4],"37":[4,58],"38":[34,0],"39":[33,1],"40":[1,32],"41":[1,31],"42":[0,32],"43":[0,32],"44":[0,0],"45":[1,62]},"inputSourceMap":{"version":3,"file":"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/Validator.ts","sources":["/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/Validator.ts"],"names":[],"mappings":"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","sourcesContent":["import {Field, MField, QueryNode, SField} from \"./Query\";\nimport {Dataset} from \"./Dataset\";\n\nimport {Collector} from \"./Collector\";\n\n\n// RETURN VALUE 0 = no errors\n// RETURN 1 = InsightError\n// RETURN 2 = NotFoundErro\nlet colFields: string[];\n\nexport class Validator {\n\tprivate datasets: Dataset[];\n\tpublic leafDatasets: string[];\n\n\tconstructor(datasets: Dataset[]) {\n\t\tthis.datasets = datasets;\n\t\tthis.leafDatasets = [];\n\t}\n\n\t// MADE CHANGES\n\tpublic validWhere(node: QueryNode): {error: number; msg: string} {\n\t\tconst key = node.getKey();\n\t\tconst children = node.getChilds();\n\t\tif (key === \"WHERE\") {\n\t\t\tif (children.length !== (1 || 0)) {\n\t\t\t\treturn {error: 1, msg: \"Where has more than one mComp\"};\n\t\t\t}\n\t\t\tfor (const k of children) {\n\t\t\t\tlet temp = this.validWhere(k);\n\t\t\t\tif (temp.error === 1) {\n\t\t\t\t\treturn {error: 1, msg: temp.msg};\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (key === \"AND\" || key === \"OR\" || key === \"NOT\") {\n\t\t\t// must be non-empty array, no {}\n\t\t\t// must have at least 1 key\n\t\t\tif (children.length === 0) {\n\t\t\t\treturn {error: 1, msg: \"Error message for code 1\"};\n\t\t\t}\n\t\t\tfor (const k of children) {\n\t\t\t\tlet temp = this.validWhere(k);\n\t\t\t\tif (temp.error === 1) {\n\t\t\t\t\treturn {error: 1, msg: temp.msg};\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (key === \"GT\" || key === \"LT\" || key === \"EQ\" || key === \"IS\") {\n\t\t\tif (children.length === 0) {\n\t\t\t\treturn {error: 1, msg: \"empty GT/LT/EQ/IS\"};\n\t\t\t}\n\t\t\tif (children.length > 1) {\n\t\t\t\tconst fkey = children[0].getKey();\n\t\t\t\tif (children.every((c) => c.getKey() === fkey)) {\n\t\t\t\t\tnode.removeExcept(children[children.length - 1]);\n\t\t\t\t} else {\n\t\t\t\t\treturn {error: 1, msg: \"only one key in GT allowed\"};\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst compCode = key === \"IS\" ? 1 : 0;\n\t\t\tlet child = children[0];\n\t\t\tlet temp = this.validateLeaf(child, compCode);\n\t\t\tif (temp.error === 1) {\n\t\t\t\treturn {error: 1, msg: temp.msg};\n\t\t\t}\n\t\t} else {\n\t\t\treturn {error: 1, msg: \"invalid comparator\"};\n\t\t}\n\t\treturn {error: 0, msg: \"\"};\n\t}\n\n\tpublic validateOptions(node: QueryNode): {error: number; msg: string} {\n\t\tconst key = node.getKey();\n\t\tconst children = node.getChilds();\n\t\tif (key === \"OPTIONS\") {\n\t\t\t// check that children are COL and ORDER\n\t\t\t// one of the children must be COL, the other ORDER, may be multiple\n\t\t\tlet childKeys = node.getChildKeys();\n\t\t\t// check that options only has COLUMNS and ORDER as children\n\t\t\t// if has both, ensure that COLUMNS is processed first\n\n\t\t\t// empty options\n\t\t\tif (children.length < 1) {\n\t\t\t\treturn {error: 1, msg: \"options is empty\"};\n\t\t\t}\n\t\t\t// keys can only be COLUMNS or ORDER\n\t\t\t// 2 cases, only columns,\n\t\t\t// if there are multiple instances of a col or order, check validity\n\t\t\t// remove all except latest added.\n\t\t\t// case 1: all childkeys are columns\n\t\t\t//\t\t\tif all come back valid, remove all but the last one\n\t\t\tif (children.every((chi) => chi.getKey() === \"COLUMNS\")) {\n\t\t\t\tfor (const c of children) {\n\t\t\t\t\tconst temp = this.validateColumns(c);\n\t\t\t\t\tif (temp.error === 1) {\n\t\t\t\t\t\treturn {error: 1, msg: temp.msg};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnode.removeExcept(children[children.length - 1]);\n\t\t\t} else if (children.every((chi) => chi.getKey() === \"COLUMNS\" || chi.getKey() === \"ORDER\")) {\n\t\t\t\t// validate all columns\n\t\t\t\tfor (const c of children) {\n\t\t\t\t\tif (c.getKey() === \"COLUMNS\") {\n\t\t\t\t\t\tconst temp = this.validateColumns(c);\n\t\t\t\t\t\tif (temp.error === 1) {\n\t\t\t\t\t\t\treturn {error: 1, msg: temp.msg};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// validate all ORDER\n\t\t\t\tfor (const c of children) {\n\t\t\t\t\tif (c.getKey() === \"ORDER\") {\n\t\t\t\t\t\tconst temp = this.validateOrder(c);\n\t\t\t\t\t\tif (temp.error === 1) {\n\t\t\t\t\t\t\treturn {error: 1, msg: temp.msg};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnode.removeOrderColumns(\"COLUMNS\");\n\t\t\t\tnode.removeOrderColumns(\"ORDER\");\n\t\t\t} else {\n\t\t\t\treturn {error: 1, msg: \"options contains not columns or order\"};\n\t\t\t}\n\n\t\t\t// case 2: multiple columns and multiple order childkeys\n\t\t\t//\t\t\tvalidate all columns, remove all but last.\n\t\t\t//\t\t\tvalidate all order, remove all but last.\n\t\t\t// if (childKeys.length === 1 && childKeys.includes(\"COLUMNS\")) {\n\t\t\t// \t// only columns case, no need to check order\n\t\t\t// \tconst col = node.getChildWithKey(\"COLUMNS\") as QueryNode;\n\t\t\t// \tif (this.validateColumns(col) === 1) {\n\t\t\t// \t\treturn 1;\n\t\t\t// \t}\n\t\t\t// } else if (childKeys.length === 2 && childKeys.includes(\"COLUMNS\") && childKeys.includes(\"ORDER\")) {\n\t\t\t// \tconst col = node.getChildWithKey(\"COLUMNS\") as QueryNode;\n\t\t\t// \tconst order = node.getChildWithKey(\"ORDER\") as QueryNode;\n\t\t\t//\n\t\t\t// \t// validate columns\n\t\t\t// \tif (this.validateColumns(col) === 1) {\n\t\t\t// \t\treturn 1;\n\t\t\t// \t}\n\t\t\t//\n\t\t\t// \t// validate order\n\t\t\t// \tif (this.validateOrder(order) === 1) {\n\t\t\t// \t\treturn 1;\n\t\t\t// \t}\n\t\t\t// } else {\n\t\t\t// \t// error case\n\t\t\t// \treturn 1;\n\t\t\t// }\n\t\t} else {\n\t\t\treturn {error: 1, msg: \"OPTIONS missing\"};\n\t\t}\n\n\t\treturn {error: 0, msg: \"\"};\n\t}\n\n\tpublic checkDatasetValidity() {\n\t\tif (this.leafDatasets.every((element) => element === this.leafDatasets[0])) {\n\t\t\tfor (const d of this.datasets) {\n\t\t\t\tif (this.leafDatasets[0] === d.id) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// one of the keys has an invalid dataset\n\t\t\treturn 2;\n\t\t} else {\n\t\t\t// keys dont match, m\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\tpublic validateOrder(node: QueryNode): {error: number; msg: string} {\n\t\tconst key = node.getKey(); // ORDER\n\t\tconst children = node.getChilds(); // \"sections_avg\"\n\n\t\t// order child cannot be type array\n\t\tif (children.length !== 1) {\n\t\t\treturn {error: 1, msg: \"Order cannot have multiple children\"};\n\t\t}\n\n\t\tfor (const s of colFields) {\n\t\t\tif (children[0].getKey() === s) {\n\t\t\t\treturn {error: 0, msg: \"\"};\n\t\t\t}\n\t\t}\n\t\treturn {error: 1, msg: \"order is not in columns\"};\n\t}\n\n\tpublic validateColumns(node: QueryNode): {error: number; msg: string} {\n\t\tconst key = node.getKey(); // COLUMNS\n\t\tconst children = node.getChilds(); // [\"sections_avg\", \"sections_dept\", \"sections_pass\"]\n\t\t// COLUMNS cannot be empty\n\t\tif (children.length < 1) {\n\t\t\treturn {error: 1, msg: \"empty columns\"};\n\t\t}\n\t\tfor (const leaf of children) {\n\t\t\tif (leaf.getChilds().length !== 0) {\n\t\t\t\treturn {error: 1, msg: \"children arent leafs?\"};\n\t\t\t}\n\t\t\tif (leaf.getKey().includes(\"_\")) {\n\t\t\t\tconst splitArr = leaf.getKey().split(\"_\");\n\t\t\t\tlet datasetID = splitArr[0]; // \"sections\"\n\t\t\t\tthis.leafDatasets.push(datasetID);\n\t\t\t\tlet field = splitArr[1]; // \"avg\"\n\n\t\t\t\tif (!Object.values(Field).includes(field)) {\n\t\t\t\t\treturn {error: 1, msg: \"field is not a valid sections field\"};\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// improper formatting of dataset_mfield/sfield\n\t\t\t\treturn {error: 1, msg: \"improper formatting of dataset_filed\"};\n\t\t\t}\n\t\t}\n\t\tconst tempCollector = new Collector(this.datasets);\n\t\tcolFields = tempCollector.extractCol(node);\n\t\treturn {error: 0, msg: \"\"};\n\t}\n\n\tpublic validateLeaf(node: QueryNode, parent: number): {error: number; msg: string} {\n\t\t// needs to contain underscore\n\t\t// parse string, first needs to be same as dataset.\n\t\t// second needs to be a valid key\n\t\tconst key = node.getKey();\n\t\tconst children = node.getChilds();\n\t\tif (children.length === 1) {\n\t\t\tconst leaf = children[0];\n\t\t\tconst leafKey = leaf.getKey();\n\t\t\tif (key.includes(\"_\")) {\n\t\t\t\tconst splitArr = key.split(\"_\");\n\t\t\t\tlet dsetID = splitArr[0];\n\t\t\t\tthis.leafDatasets.push(dsetID);\n\t\t\t\tlet field = splitArr[1];\n\n\t\t\t\t// GT/LT/EQ case\n\t\t\t\tif (parent === 0) {\n\t\t\t\t\t// can combine these 2 cases.\n\t\t\t\t\tif (Object.values(MField).includes(field)) {\n\t\t\t\t\t\tif (isNaN(leafKey)) {\n\t\t\t\t\t\t\t// should be a number (invalid type)\n\t\t\t\t\t\t\treturn {error: 1, msg: \"value type is not a number\"};\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// wrong key type in GT/LT/EQ\n\t\t\t\t\t\treturn {error: 1, msg: \"wrong key type in GT LT EQ\"};\n\n\t\t\t\t\t}\n\t\t\t\t} else if (parent === 1) {\n\t\t\t\t\tif (Object.values(SField).includes(field)) {\n\t\t\t\t\t\tif (!(typeof leafKey === \"string\")) {\n\t\t\t\t\t\t\t// invalid value type (should be string)\n\t\t\t\t\t\t\treturn {error: 1, msg: \"value type is not a string\"};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet temp = this.validWildcard(leafKey);\n\t\t\t\t\t\tif (temp.error === 1) {\n\t\t\t\t\t\t\treturn {error: 1, msg: temp.msg};\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// wrong key type in IS\n\t\t\t\t\t\treturn {error: 1, msg: \"wrong key type in IS\"};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn {error: 1, msg: \"key is not in proper format (dataset_key)\"};\n\t\t\t}\n\t\t}\n\t\treturn {error: 0, msg: \"\"};\n\t}\n\n\tpublic validWildcard(wildcard: string): {error: number; msg: string} {\n\t\t// may need to change this in future.\n\t\tif (wildcard.length === 0) {\n\t\t\treturn {error: 0, msg: \"\"};\n\t\t}\n\n\t\tif (wildcard.length === 1) {\n\t\t\tif (wildcard === \"*\") {\n\t\t\t\treturn {error: 1, msg: \"wildcard only contains *\"};\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 1; i < wildcard.length - 1; i++) {\n\t\t\tconst char = wildcard.charAt(i);\n\t\t\tif (char === \"*\") {\n\t\t\t\treturn {error: 1, msg: \"* found in middle of string\"};\n\t\t\t}\n\t\t}\n\t\treturn {error: 0, msg: \"\"};\n\t}\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6b8b589b78f640c450799d64c19d9f5679c98b07","contentHash":"cdab4a88b1c0d9e6589d2e728b74e9793b59be4cf9d2ffe572446887e653a93e"},"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/Query.ts":{"path":"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/Query.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":125}},"2":{"start":{"line":8,"column":8},"end":{"line":8,"column":27}},"3":{"start":{"line":9,"column":8},"end":{"line":9,"column":28}},"4":{"start":{"line":12,"column":0},"end":{"line":12,"column":22}},"5":{"start":{"line":21,"column":8},"end":{"line":21,"column":33}},"6":{"start":{"line":22,"column":8},"end":{"line":22,"column":36}},"7":{"start":{"line":23,"column":8},"end":{"line":23,"column":26}},"8":{"start":{"line":26,"column":8},"end":{"line":26,"column":33}},"9":{"start":{"line":29,"column":8},"end":{"line":33,"column":9}},"10":{"start":{"line":29,"column":21},"end":{"line":29,"column":45}},"11":{"start":{"line":30,"column":12},"end":{"line":32,"column":13}},"12":{"start":{"line":31,"column":16},"end":{"line":31,"column":43}},"13":{"start":{"line":36,"column":19},"end":{"line":36,"column":24}},"14":{"start":{"line":37,"column":8},"end":{"line":46,"column":9}},"15":{"start":{"line":37,"column":21},"end":{"line":37,"column":45}},"16":{"start":{"line":38,"column":12},"end":{"line":45,"column":13}},"17":{"start":{"line":39,"column":16},"end":{"line":44,"column":17}},"18":{"start":{"line":40,"column":20},"end":{"line":40,"column":32}},"19":{"start":{"line":43,"column":20},"end":{"line":43,"column":47}},"20":{"start":{"line":49,"column":26},"end":{"line":49,"column":68}},"21":{"start":{"line":49,"column":54},"end":{"line":49,"column":67}},"22":{"start":{"line":50,"column":8},"end":{"line":50,"column":25}},"23":{"start":{"line":53,"column":8},"end":{"line":57,"column":9}},"24":{"start":{"line":54,"column":12},"end":{"line":56,"column":13}},"25":{"start":{"line":55,"column":16},"end":{"line":55,"column":25}},"26":{"start":{"line":60,"column":8},"end":{"line":60,"column":25}},"27":{"start":{"line":63,"column":8},"end":{"line":63,"column":29}},"28":{"start":{"line":66,"column":8},"end":{"line":66,"column":25}},"29":{"start":{"line":69,"column":8},"end":{"line":69,"column":29}},"30":{"start":{"line":72,"column":8},"end":{"line":72,"column":29}},"31":{"start":{"line":75,"column":8},"end":{"line":75,"column":27}},"32":{"start":{"line":78,"column":0},"end":{"line":78,"column":30}},"33":{"start":{"line":80,"column":0},"end":{"line":84,"column":53}},"34":{"start":{"line":81,"column":4},"end":{"line":81,"column":24}},"35":{"start":{"line":82,"column":4},"end":{"line":82,"column":26}},"36":{"start":{"line":83,"column":4},"end":{"line":83,"column":26}},"37":{"start":{"line":86,"column":0},"end":{"line":90,"column":47}},"38":{"start":{"line":87,"column":4},"end":{"line":87,"column":22}},"39":{"start":{"line":88,"column":4},"end":{"line":88,"column":22}},"40":{"start":{"line":89,"column":4},"end":{"line":89,"column":22}},"41":{"start":{"line":92,"column":0},"end":{"line":103,"column":50}},"42":{"start":{"line":93,"column":4},"end":{"line":93,"column":27}},"43":{"start":{"line":94,"column":4},"end":{"line":94,"column":23}},"44":{"start":{"line":95,"column":4},"end":{"line":95,"column":29}},"45":{"start":{"line":96,"column":4},"end":{"line":96,"column":39}},"46":{"start":{"line":97,"column":4},"end":{"line":97,"column":27}},"47":{"start":{"line":98,"column":4},"end":{"line":98,"column":27}},"48":{"start":{"line":99,"column":4},"end":{"line":99,"column":25}},"49":{"start":{"line":100,"column":4},"end":{"line":100,"column":27}},"50":{"start":{"line":101,"column":4},"end":{"line":101,"column":27}},"51":{"start":{"line":102,"column":4},"end":{"line":102,"column":29}},"52":{"start":{"line":105,"column":0},"end":{"line":111,"column":53}},"53":{"start":{"line":106,"column":4},"end":{"line":106,"column":28}},"54":{"start":{"line":107,"column":4},"end":{"line":107,"column":26}},"55":{"start":{"line":108,"column":4},"end":{"line":108,"column":28}},"56":{"start":{"line":109,"column":4},"end":{"line":109,"column":28}},"57":{"start":{"line":110,"column":4},"end":{"line":110,"column":30}},"58":{"start":{"line":113,"column":0},"end":{"line":119,"column":53}},"59":{"start":{"line":114,"column":4},"end":{"line":114,"column":28}},"60":{"start":{"line":115,"column":4},"end":{"line":115,"column":24}},"61":{"start":{"line":116,"column":4},"end":{"line":116,"column":30}},"62":{"start":{"line":117,"column":4},"end":{"line":117,"column":40}},"63":{"start":{"line":118,"column":4},"end":{"line":118,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":29},"end":{"line":10,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":26},"end":{"line":24,"column":5}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":19},"end":{"line":27,"column":5}},"line":25},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":23},"end":{"line":34,"column":5}},"line":28},"4":{"name":"(anonymous_4)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":28},"end":{"line":47,"column":5}},"line":35},"5":{"name":"(anonymous_5)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":19},"end":{"line":51,"column":5}},"line":48},"6":{"name":"(anonymous_6)","decl":{"start":{"line":49,"column":44},"end":{"line":49,"column":45}},"loc":{"start":{"line":49,"column":54},"end":{"line":49,"column":67}},"line":49},"7":{"name":"(anonymous_7)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":25},"end":{"line":58,"column":5}},"line":52},"8":{"name":"(anonymous_8)","decl":{"start":{"line":59,"column":4},"end":{"line":59,"column":5}},"loc":{"start":{"line":59,"column":13},"end":{"line":61,"column":5}},"line":59},"9":{"name":"(anonymous_9)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":13},"end":{"line":64,"column":5}},"line":62},"10":{"name":"(anonymous_10)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":14},"end":{"line":67,"column":5}},"line":65},"11":{"name":"(anonymous_11)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":16},"end":{"line":70,"column":5}},"line":68},"12":{"name":"(anonymous_12)","decl":{"start":{"line":71,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":71,"column":22},"end":{"line":73,"column":5}},"line":71},"13":{"name":"(anonymous_13)","decl":{"start":{"line":74,"column":4},"end":{"line":74,"column":5}},"loc":{"start":{"line":74,"column":16},"end":{"line":76,"column":5}},"line":74},"14":{"name":"(anonymous_14)","decl":{"start":{"line":80,"column":1},"end":{"line":80,"column":2}},"loc":{"start":{"line":80,"column":19},"end":{"line":84,"column":1}},"line":80},"15":{"name":"(anonymous_15)","decl":{"start":{"line":86,"column":1},"end":{"line":86,"column":2}},"loc":{"start":{"line":86,"column":17},"end":{"line":90,"column":1}},"line":86},"16":{"name":"(anonymous_16)","decl":{"start":{"line":92,"column":1},"end":{"line":92,"column":2}},"loc":{"start":{"line":92,"column":18},"end":{"line":103,"column":1}},"line":92},"17":{"name":"(anonymous_17)","decl":{"start":{"line":105,"column":1},"end":{"line":105,"column":2}},"loc":{"start":{"line":105,"column":19},"end":{"line":111,"column":1}},"line":105},"18":{"name":"(anonymous_18)","decl":{"start":{"line":113,"column":1},"end":{"line":113,"column":2}},"loc":{"start":{"line":113,"column":19},"end":{"line":119,"column":1}},"line":113}},"branchMap":{"0":{"loc":{"start":{"line":30,"column":12},"end":{"line":32,"column":13}},"type":"if","locations":[{"start":{"line":30,"column":12},"end":{"line":32,"column":13}},{"start":{"line":30,"column":12},"end":{"line":32,"column":13}}],"line":30},"1":{"loc":{"start":{"line":38,"column":12},"end":{"line":45,"column":13}},"type":"if","locations":[{"start":{"line":38,"column":12},"end":{"line":45,"column":13}},{"start":{"line":38,"column":12},"end":{"line":45,"column":13}}],"line":38},"2":{"loc":{"start":{"line":39,"column":16},"end":{"line":44,"column":17}},"type":"if","locations":[{"start":{"line":39,"column":16},"end":{"line":44,"column":17}},{"start":{"line":39,"column":16},"end":{"line":44,"column":17}}],"line":39},"3":{"loc":{"start":{"line":54,"column":12},"end":{"line":56,"column":13}},"type":"if","locations":[{"start":{"line":54,"column":12},"end":{"line":56,"column":13}},{"start":{"line":54,"column":12},"end":{"line":56,"column":13}}],"line":54},"4":{"loc":{"start":{"line":84,"column":12},"end":{"line":84,"column":51}},"type":"binary-expr","locations":[{"start":{"line":84,"column":12},"end":{"line":84,"column":26}},{"start":{"line":84,"column":31},"end":{"line":84,"column":50}}],"line":84},"5":{"loc":{"start":{"line":90,"column":10},"end":{"line":90,"column":45}},"type":"binary-expr","locations":[{"start":{"line":90,"column":10},"end":{"line":90,"column":22}},{"start":{"line":90,"column":27},"end":{"line":90,"column":44}}],"line":90},"6":{"loc":{"start":{"line":103,"column":11},"end":{"line":103,"column":48}},"type":"binary-expr","locations":[{"start":{"line":103,"column":11},"end":{"line":103,"column":24}},{"start":{"line":103,"column":29},"end":{"line":103,"column":47}}],"line":103},"7":{"loc":{"start":{"line":111,"column":12},"end":{"line":111,"column":51}},"type":"binary-expr","locations":[{"start":{"line":111,"column":12},"end":{"line":111,"column":26}},{"start":{"line":111,"column":31},"end":{"line":111,"column":50}}],"line":111},"8":{"loc":{"start":{"line":119,"column":12},"end":{"line":119,"column":51}},"type":"binary-expr","locations":[{"start":{"line":119,"column":12},"end":{"line":119,"column":26}},{"start":{"line":119,"column":31},"end":{"line":119,"column":50}}],"line":119}},"s":{"0":1,"1":1,"2":72,"3":72,"4":1,"5":968,"6":968,"7":968,"8":768,"9":18,"10":18,"11":18,"12":0,"13":94,"14":94,"15":94,"16":186,"17":93,"18":93,"19":0,"20":77,"21":128,"22":77,"23":67,"24":91,"25":66,"26":0,"27":2848,"28":362,"29":1853,"30":627,"31":0,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1},"f":{"0":72,"1":968,"2":768,"3":18,"4":94,"5":77,"6":128,"7":67,"8":0,"9":2848,"10":362,"11":1853,"12":627,"13":0,"14":1,"15":1,"16":1,"17":1,"18":1},"b":{"0":[0,18],"1":[93,93],"2":[93,0],"3":[66,25],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/Query.ts","sources":["/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/Query.ts"],"names":[],"mappings":"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","sourcesContent":["import e from \"express\";\n\nexport class Query {\n\tpublic where: QueryNode;\n\tpublic options: QueryNode;\n\n\tconstructor(where: QueryNode, opts: QueryNode) {\n\t\tthis.where = where;\n\t\tthis.options = opts;\n\t}\n}\n\nclass Columns {}\n\nexport class QueryNode {\n\tpublic operator: string | number;\n\tpublic children: any[];\n\tpublic leaf: boolean;\n\tpublic parent!: QueryNode;\n\n\tconstructor(operator: any) {\n\t\tthis.operator = operator;\n\t\tthis.children = new Array<QueryNode>();\n\t\tthis.leaf = false;\n\t}\n\n\tpublic addChild(node: QueryNode) {\n\t\tthis.children.push(node);\n\t}\n\n\tpublic removeExcept(node: QueryNode) {\n\t\tfor (let i = this.children.length - 1; i >= 0; i--) {\n\t\t\tif (this.children[i] !== node) {\n\t\t\t\tthis.children.splice(i, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic removeOrderColumns(key: string) {\n\t\tlet seen = false;\n\t\tfor (let i = this.children.length - 1; i >= 0; i--) {\n\t\t\tif (this.children[i].getKey() === key) {\n\t\t\t\tif (!seen) {\n\t\t\t\t\tseen = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis.children.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpublic getChildKeys() {\n\t\tconst keysArray = this.children.map((node) => node.operator);\n\t\treturn keysArray;\n\t}\n\n\tpublic getChildWithKey(key: string) {\n\t\tfor (const c of this.getChilds()) {\n\t\t\tif (c.getKey() === key) {\n\t\t\t\treturn c;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic isLeaf() {\n\t\treturn this.leaf;\n\t}\n\n\tpublic getKey(): any {\n\t\treturn this.operator;\n\t}\n\tpublic setLeaf() {\n\t\tthis.leaf = true;\n\t}\n\n\tpublic getChilds() {\n\t\treturn this.children;\n\t}\n\n\tpublic addParent(parent: QueryNode) {\n\t\tthis.parent = parent;\n\t}\n\n\tpublic getParent() {\n\t\treturn this.parent;\n\t}\n}\nexport enum Filter {\n\tOR = \"OR\",\n\tAND = \"AND\",\n\tNOT = \"NOT\",\n}\n\nexport enum Comp {\n\tGT = \"GT\",\n\tLT = \"LT\",\n\tEQ = \"EQ\",\n}\n\nexport enum Field {\n\tuuid = \"uuid\",\n\tid = \"id\",\n\ttitle = \"title\",\n\tinstructor = \"instructor\",\n\tdept = \"dept\",\n\tyear = \"year\",\n\tavg = \"avg\",\n\tpass = \"pass\",\n\tfail = \"fail\",\n\taudit = \"audit\",\n}\n\nexport enum MField {\n\tyear = \"year\",\n\tavg = \"avg\",\n\tpass = \"pass\",\n\tfail = \"fail\",\n\taudit = \"audit\",\n}\n\nexport enum SField {\n\tuuid = \"uuid\",\n\tid = \"id\",\n\ttitle = \"title\",\n\tinstructor = \"instructor\",\n\tdept = \"dept\",\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b2f0c120abf10cdad510029fbd348b58590a3544","contentHash":"5dd396f8e519d6ceeda29e6b838ed9a50bf1e637b81b7830e8b0e5ec7bd32dc0"},"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/Collector.ts":{"path":"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/Collector.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":36}},"3":{"start":{"line":9,"column":8},"end":{"line":9,"column":33}},"4":{"start":{"line":12,"column":8},"end":{"line":12,"column":29}},"5":{"start":{"line":15,"column":22},"end":{"line":15,"column":33}},"6":{"start":{"line":16,"column":24},"end":{"line":16,"column":37}},"7":{"start":{"line":17,"column":20},"end":{"line":17,"column":54}},"8":{"start":{"line":18,"column":29},"end":{"line":18,"column":49}},"9":{"start":{"line":19,"column":28},"end":{"line":19,"column":33}},"10":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"11":{"start":{"line":22,"column":12},"end":{"line":22,"column":33}},"12":{"start":{"line":24,"column":8},"end":{"line":31,"column":9}},"13":{"start":{"line":25,"column":25},"end":{"line":25,"column":45}},"14":{"start":{"line":26,"column":12},"end":{"line":26,"column":52}},"15":{"start":{"line":29,"column":28},"end":{"line":29,"column":73}},"16":{"start":{"line":30,"column":12},"end":{"line":30,"column":59}},"17":{"start":{"line":32,"column":24},"end":{"line":32,"column":69}},"18":{"start":{"line":33,"column":8},"end":{"line":37,"column":9}},"19":{"start":{"line":34,"column":26},"end":{"line":34,"column":58}},"20":{"start":{"line":35,"column":28},"end":{"line":35,"column":57}},"21":{"start":{"line":36,"column":12},"end":{"line":36,"column":55}},"22":{"start":{"line":38,"column":8},"end":{"line":38,"column":23}},"23":{"start":{"line":41,"column":18},"end":{"line":41,"column":20}},"24":{"start":{"line":42,"column":8},"end":{"line":48,"column":9}},"25":{"start":{"line":43,"column":12},"end":{"line":47,"column":13}},"26":{"start":{"line":44,"column":16},"end":{"line":46,"column":17}},"27":{"start":{"line":45,"column":20},"end":{"line":45,"column":34}},"28":{"start":{"line":49,"column":8},"end":{"line":49,"column":19}},"29":{"start":{"line":52,"column":20},"end":{"line":52,"column":25}},"30":{"start":{"line":53,"column":22},"end":{"line":53,"column":45}},"31":{"start":{"line":54,"column":8},"end":{"line":64,"column":11}},"32":{"start":{"line":55,"column":25},"end":{"line":55,"column":33}},"33":{"start":{"line":56,"column":25},"end":{"line":56,"column":33}},"34":{"start":{"line":57,"column":12},"end":{"line":62,"column":13}},"35":{"start":{"line":58,"column":16},"end":{"line":58,"column":35}},"36":{"start":{"line":60,"column":17},"end":{"line":62,"column":13}},"37":{"start":{"line":61,"column":16},"end":{"line":61,"column":48}},"38":{"start":{"line":63,"column":12},"end":{"line":63,"column":21}},"39":{"start":{"line":67,"column":24},"end":{"line":67,"column":26}},"40":{"start":{"line":68,"column":8},"end":{"line":75,"column":9}},"41":{"start":{"line":69,"column":27},"end":{"line":69,"column":48}},"42":{"start":{"line":70,"column":12},"end":{"line":73,"column":13}},"43":{"start":{"line":71,"column":28},"end":{"line":71,"column":49}},"44":{"start":{"line":72,"column":16},"end":{"line":72,"column":41}},"45":{"start":{"line":74,"column":12},"end":{"line":74,"column":33}},"46":{"start":{"line":76,"column":8},"end":{"line":76,"column":23}},"47":{"start":{"line":79,"column":8},"end":{"line":79,"column":40}},"48":{"start":{"line":82,"column":32},"end":{"line":82,"column":41}},"49":{"start":{"line":83,"column":8},"end":{"line":86,"column":9}},"50":{"start":{"line":84,"column":34},"end":{"line":84,"column":57}},"51":{"start":{"line":85,"column":12},"end":{"line":85,"column":94}},"52":{"start":{"line":87,"column":33},"end":{"line":90,"column":10}},"53":{"start":{"line":88,"column":34},"end":{"line":88,"column":57}},"54":{"start":{"line":89,"column":12},"end":{"line":89,"column":60}},"55":{"start":{"line":91,"column":8},"end":{"line":91,"column":53}},"56":{"start":{"line":94,"column":19},"end":{"line":94,"column":21}},"57":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"58":{"start":{"line":96,"column":12},"end":{"line":96,"column":34}},"59":{"start":{"line":98,"column":8},"end":{"line":98,"column":20}},"60":{"start":{"line":101,"column":25},"end":{"line":101,"column":38}},"61":{"start":{"line":102,"column":23},"end":{"line":102,"column":25}},"62":{"start":{"line":103,"column":26},"end":{"line":103,"column":28}},"63":{"start":{"line":104,"column":8},"end":{"line":144,"column":9}},"64":{"start":{"line":105,"column":12},"end":{"line":110,"column":13}},"65":{"start":{"line":106,"column":34},"end":{"line":106,"column":55}},"66":{"start":{"line":107,"column":16},"end":{"line":109,"column":17}},"67":{"start":{"line":108,"column":20},"end":{"line":108,"column":37}},"68":{"start":{"line":111,"column":12},"end":{"line":111,"column":80}},"69":{"start":{"line":112,"column":12},"end":{"line":112,"column":28}},"70":{"start":{"line":114,"column":13},"end":{"line":144,"column":9}},"71":{"start":{"line":115,"column":12},"end":{"line":120,"column":13}},"72":{"start":{"line":116,"column":34},"end":{"line":116,"column":55}},"73":{"start":{"line":117,"column":16},"end":{"line":119,"column":17}},"74":{"start":{"line":118,"column":20},"end":{"line":118,"column":37}},"75":{"start":{"line":121,"column":12},"end":{"line":121,"column":55}},"76":{"start":{"line":122,"column":12},"end":{"line":122,"column":28}},"77":{"start":{"line":124,"column":13},"end":{"line":144,"column":9}},"78":{"start":{"line":125,"column":12},"end":{"line":130,"column":13}},"79":{"start":{"line":126,"column":34},"end":{"line":126,"column":55}},"80":{"start":{"line":127,"column":16},"end":{"line":129,"column":17}},"81":{"start":{"line":128,"column":20},"end":{"line":128,"column":37}},"82":{"start":{"line":131,"column":12},"end":{"line":139,"column":13}},"83":{"start":{"line":132,"column":16},"end":{"line":138,"column":17}},"84":{"start":{"line":133,"column":20},"end":{"line":137,"column":21}},"85":{"start":{"line":134,"column":24},"end":{"line":136,"column":25}},"86":{"start":{"line":135,"column":28},"end":{"line":135,"column":48}},"87":{"start":{"line":140,"column":12},"end":{"line":140,"column":31}},"88":{"start":{"line":142,"column":13},"end":{"line":144,"column":9}},"89":{"start":{"line":143,"column":12},"end":{"line":143,"column":40}},"90":{"start":{"line":145,"column":8},"end":{"line":145,"column":24}},"91":{"start":{"line":148,"column":8},"end":{"line":148,"column":30}},"92":{"start":{"line":151,"column":31},"end":{"line":151,"column":33}},"93":{"start":{"line":152,"column":27},"end":{"line":152,"column":40}},"94":{"start":{"line":153,"column":26},"end":{"line":153,"column":72}},"95":{"start":{"line":154,"column":22},"end":{"line":154,"column":68}},"96":{"start":{"line":155,"column":24},"end":{"line":155,"column":67}},"97":{"start":{"line":156,"column":8},"end":{"line":156,"column":39}},"98":{"start":{"line":157,"column":8},"end":{"line":199,"column":9}},"99":{"start":{"line":159,"column":16},"end":{"line":159,"column":99}},"100":{"start":{"line":160,"column":16},"end":{"line":160,"column":22}},"101":{"start":{"line":162,"column":16},"end":{"line":162,"column":99}},"102":{"start":{"line":163,"column":16},"end":{"line":163,"column":22}},"103":{"start":{"line":165,"column":16},"end":{"line":165,"column":99}},"104":{"start":{"line":166,"column":16},"end":{"line":166,"column":22}},"105":{"start":{"line":168,"column":16},"end":{"line":197,"column":17}},"106":{"start":{"line":169,"column":20},"end":{"line":196,"column":21}},"107":{"start":{"line":170,"column":24},"end":{"line":195,"column":25}},"108":{"start":{"line":171,"column":42},"end":{"line":171,"column":52}},"109":{"start":{"line":172,"column":41},"end":{"line":172,"column":68}},"110":{"start":{"line":173,"column":40},"end":{"line":173,"column":66}},"111":{"start":{"line":174,"column":45},"end":{"line":174,"column":55}},"112":{"start":{"line":175,"column":28},"end":{"line":194,"column":29}},"113":{"start":{"line":176,"column":32},"end":{"line":178,"column":33}},"114":{"start":{"line":177,"column":36},"end":{"line":177,"column":63}},"115":{"start":{"line":180,"column":33},"end":{"line":194,"column":29}},"116":{"start":{"line":181,"column":32},"end":{"line":183,"column":33}},"117":{"start":{"line":182,"column":36},"end":{"line":182,"column":63}},"118":{"start":{"line":185,"column":33},"end":{"line":194,"column":29}},"119":{"start":{"line":186,"column":32},"end":{"line":188,"column":33}},"120":{"start":{"line":187,"column":36},"end":{"line":187,"column":63}},"121":{"start":{"line":190,"column":33},"end":{"line":194,"column":29}},"122":{"start":{"line":191,"column":32},"end":{"line":193,"column":33}},"123":{"start":{"line":192,"column":36},"end":{"line":192,"column":63}},"124":{"start":{"line":198,"column":16},"end":{"line":198,"column":22}},"125":{"start":{"line":200,"column":8},"end":{"line":200,"column":32}},"126":{"start":{"line":203,"column":33},"end":{"line":203,"column":35}},"127":{"start":{"line":204,"column":8},"end":{"line":214,"column":9}},"128":{"start":{"line":205,"column":12},"end":{"line":213,"column":13}},"129":{"start":{"line":206,"column":16},"end":{"line":212,"column":17}},"130":{"start":{"line":207,"column":20},"end":{"line":211,"column":21}},"131":{"start":{"line":210,"column":24},"end":{"line":210,"column":51}},"132":{"start":{"line":215,"column":8},"end":{"line":215,"column":32}},"133":{"start":{"line":218,"column":0},"end":{"line":218,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":26},"end":{"line":10,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":18},"end":{"line":13,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":21},"end":{"line":39,"column":5}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":27},"end":{"line":50,"column":5}},"line":40},"4":{"name":"(anonymous_4)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":33},"end":{"line":65,"column":5}},"line":51},"5":{"name":"(anonymous_5)","decl":{"start":{"line":54,"column":28},"end":{"line":54,"column":29}},"loc":{"start":{"line":54,"column":38},"end":{"line":64,"column":9}},"line":54},"6":{"name":"(anonymous_6)","decl":{"start":{"line":66,"column":4},"end":{"line":66,"column":5}},"loc":{"start":{"line":66,"column":32},"end":{"line":77,"column":5}},"line":66},"7":{"name":"(anonymous_7)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":26},"end":{"line":80,"column":5}},"line":78},"8":{"name":"(anonymous_8)","decl":{"start":{"line":81,"column":4},"end":{"line":81,"column":5}},"loc":{"start":{"line":81,"column":34},"end":{"line":92,"column":5}},"line":81},"9":{"name":"(anonymous_9)","decl":{"start":{"line":87,"column":49},"end":{"line":87,"column":50}},"loc":{"start":{"line":87,"column":62},"end":{"line":90,"column":9}},"line":87},"10":{"name":"(anonymous_10)","decl":{"start":{"line":93,"column":4},"end":{"line":93,"column":5}},"loc":{"start":{"line":93,"column":24},"end":{"line":99,"column":5}},"line":93},"11":{"name":"(anonymous_11)","decl":{"start":{"line":100,"column":4},"end":{"line":100,"column":5}},"loc":{"start":{"line":100,"column":20},"end":{"line":146,"column":5}},"line":100},"12":{"name":"(anonymous_12)","decl":{"start":{"line":147,"column":4},"end":{"line":147,"column":5}},"loc":{"start":{"line":147,"column":18},"end":{"line":149,"column":5}},"line":147},"13":{"name":"(anonymous_13)","decl":{"start":{"line":150,"column":4},"end":{"line":150,"column":5}},"loc":{"start":{"line":150,"column":20},"end":{"line":201,"column":5}},"line":150},"14":{"name":"(anonymous_14)","decl":{"start":{"line":202,"column":4},"end":{"line":202,"column":5}},"loc":{"start":{"line":202,"column":68},"end":{"line":216,"column":5}},"line":202}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},{"start":{"line":21,"column":8},"end":{"line":23,"column":9}}],"line":21},"1":{"loc":{"start":{"line":24,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":31,"column":9}},{"start":{"line":24,"column":8},"end":{"line":31,"column":9}}],"line":24},"2":{"loc":{"start":{"line":33,"column":8},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":37,"column":9}},{"start":{"line":33,"column":8},"end":{"line":37,"column":9}}],"line":33},"3":{"loc":{"start":{"line":43,"column":12},"end":{"line":47,"column":13}},"type":"if","locations":[{"start":{"line":43,"column":12},"end":{"line":47,"column":13}},{"start":{"line":43,"column":12},"end":{"line":47,"column":13}}],"line":43},"4":{"loc":{"start":{"line":57,"column":12},"end":{"line":62,"column":13}},"type":"if","locations":[{"start":{"line":57,"column":12},"end":{"line":62,"column":13}},{"start":{"line":57,"column":12},"end":{"line":62,"column":13}}],"line":57},"5":{"loc":{"start":{"line":57,"column":16},"end":{"line":57,"column":68}},"type":"binary-expr","locations":[{"start":{"line":57,"column":16},"end":{"line":57,"column":40}},{"start":{"line":57,"column":44},"end":{"line":57,"column":68}}],"line":57},"6":{"loc":{"start":{"line":60,"column":17},"end":{"line":62,"column":13}},"type":"if","locations":[{"start":{"line":60,"column":17},"end":{"line":62,"column":13}},{"start":{"line":60,"column":17},"end":{"line":62,"column":13}}],"line":60},"7":{"loc":{"start":{"line":60,"column":21},"end":{"line":60,"column":73}},"type":"binary-expr","locations":[{"start":{"line":60,"column":21},"end":{"line":60,"column":45}},{"start":{"line":60,"column":49},"end":{"line":60,"column":73}}],"line":60},"8":{"loc":{"start":{"line":85,"column":48},"end":{"line":85,"column":87}},"type":"binary-expr","locations":[{"start":{"line":85,"column":48},"end":{"line":85,"column":82}},{"start":{"line":85,"column":86},"end":{"line":85,"column":87}}],"line":85},"9":{"loc":{"start":{"line":104,"column":8},"end":{"line":144,"column":9}},"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":144,"column":9}},{"start":{"line":104,"column":8},"end":{"line":144,"column":9}}],"line":104},"10":{"loc":{"start":{"line":114,"column":13},"end":{"line":144,"column":9}},"type":"if","locations":[{"start":{"line":114,"column":13},"end":{"line":144,"column":9}},{"start":{"line":114,"column":13},"end":{"line":144,"column":9}}],"line":114},"11":{"loc":{"start":{"line":124,"column":13},"end":{"line":144,"column":9}},"type":"if","locations":[{"start":{"line":124,"column":13},"end":{"line":144,"column":9}},{"start":{"line":124,"column":13},"end":{"line":144,"column":9}}],"line":124},"12":{"loc":{"start":{"line":132,"column":16},"end":{"line":138,"column":17}},"type":"if","locations":[{"start":{"line":132,"column":16},"end":{"line":138,"column":17}},{"start":{"line":132,"column":16},"end":{"line":138,"column":17}}],"line":132},"13":{"loc":{"start":{"line":134,"column":24},"end":{"line":136,"column":25}},"type":"if","locations":[{"start":{"line":134,"column":24},"end":{"line":136,"column":25}},{"start":{"line":134,"column":24},"end":{"line":136,"column":25}}],"line":134},"14":{"loc":{"start":{"line":142,"column":13},"end":{"line":144,"column":9}},"type":"if","locations":[{"start":{"line":142,"column":13},"end":{"line":144,"column":9}},{"start":{"line":142,"column":13},"end":{"line":144,"column":9}}],"line":142},"15":{"loc":{"start":{"line":142,"column":17},"end":{"line":142,"column":97}},"type":"binary-expr","locations":[{"start":{"line":142,"column":17},"end":{"line":142,"column":34}},{"start":{"line":142,"column":38},"end":{"line":142,"column":55}},{"start":{"line":142,"column":59},"end":{"line":142,"column":76}},{"start":{"line":142,"column":80},"end":{"line":142,"column":97}}],"line":142},"16":{"loc":{"start":{"line":157,"column":8},"end":{"line":199,"column":9}},"type":"switch","locations":[{"start":{"line":158,"column":12},"end":{"line":160,"column":22}},{"start":{"line":161,"column":12},"end":{"line":163,"column":22}},{"start":{"line":164,"column":12},"end":{"line":166,"column":22}},{"start":{"line":167,"column":12},"end":{"line":198,"column":22}}],"line":157},"17":{"loc":{"start":{"line":169,"column":20},"end":{"line":196,"column":21}},"type":"if","locations":[{"start":{"line":169,"column":20},"end":{"line":196,"column":21}},{"start":{"line":169,"column":20},"end":{"line":196,"column":21}}],"line":169},"18":{"loc":{"start":{"line":175,"column":28},"end":{"line":194,"column":29}},"type":"if","locations":[{"start":{"line":175,"column":28},"end":{"line":194,"column":29}},{"start":{"line":175,"column":28},"end":{"line":194,"column":29}}],"line":175},"19":{"loc":{"start":{"line":175,"column":33},"end":{"line":175,"column":46}},"type":"binary-expr","locations":[{"start":{"line":175,"column":33},"end":{"line":175,"column":38}},{"start":{"line":175,"column":42},"end":{"line":175,"column":46}}],"line":175},"20":{"loc":{"start":{"line":176,"column":32},"end":{"line":178,"column":33}},"type":"if","locations":[{"start":{"line":176,"column":32},"end":{"line":178,"column":33}},{"start":{"line":176,"column":32},"end":{"line":178,"column":33}}],"line":176},"21":{"loc":{"start":{"line":180,"column":33},"end":{"line":194,"column":29}},"type":"if","locations":[{"start":{"line":180,"column":33},"end":{"line":194,"column":29}},{"start":{"line":180,"column":33},"end":{"line":194,"column":29}}],"line":180},"22":{"loc":{"start":{"line":181,"column":32},"end":{"line":183,"column":33}},"type":"if","locations":[{"start":{"line":181,"column":32},"end":{"line":183,"column":33}},{"start":{"line":181,"column":32},"end":{"line":183,"column":33}}],"line":181},"23":{"loc":{"start":{"line":185,"column":33},"end":{"line":194,"column":29}},"type":"if","locations":[{"start":{"line":185,"column":33},"end":{"line":194,"column":29}},{"start":{"line":185,"column":33},"end":{"line":194,"column":29}}],"line":185},"24":{"loc":{"start":{"line":186,"column":32},"end":{"line":188,"column":33}},"type":"if","locations":[{"start":{"line":186,"column":32},"end":{"line":188,"column":33}},{"start":{"line":186,"column":32},"end":{"line":188,"column":33}}],"line":186},"25":{"loc":{"start":{"line":190,"column":33},"end":{"line":194,"column":29}},"type":"if","locations":[{"start":{"line":190,"column":33},"end":{"line":194,"column":29}},{"start":{"line":190,"column":33},"end":{"line":194,"column":29}}],"line":190},"26":{"loc":{"start":{"line":190,"column":38},"end":{"line":190,"column":51}},"type":"binary-expr","locations":[{"start":{"line":190,"column":38},"end":{"line":190,"column":43}},{"start":{"line":190,"column":47},"end":{"line":190,"column":51}}],"line":190},"27":{"loc":{"start":{"line":191,"column":32},"end":{"line":193,"column":33}},"type":"if","locations":[{"start":{"line":191,"column":32},"end":{"line":193,"column":33}},{"start":{"line":191,"column":32},"end":{"line":193,"column":33}}],"line":191},"28":{"loc":{"start":{"line":205,"column":12},"end":{"line":213,"column":13}},"type":"if","locations":[{"start":{"line":205,"column":12},"end":{"line":213,"column":13}},{"start":{"line":205,"column":12},"end":{"line":213,"column":13}}],"line":205},"29":{"loc":{"start":{"line":207,"column":20},"end":{"line":211,"column":21}},"type":"if","locations":[{"start":{"line":207,"column":20},"end":{"line":211,"column":21}},{"start":{"line":207,"column":20},"end":{"line":211,"column":21}}],"line":207},"30":{"loc":{"start":{"line":207,"column":24},"end":{"line":209,"column":70}},"type":"binary-expr","locations":[{"start":{"line":207,"column":25},"end":{"line":207,"column":43}},{"start":{"line":207,"column":47},"end":{"line":207,"column":67}},{"start":{"line":208,"column":25},"end":{"line":208,"column":43}},{"start":{"line":208,"column":47},"end":{"line":208,"column":67}},{"start":{"line":209,"column":25},"end":{"line":209,"column":43}},{"start":{"line":209,"column":47},"end":{"line":209,"column":69}}],"line":207}},"s":{"0":1,"1":1,"2":1,"3":143,"4":85,"5":43,"6":43,"7":43,"8":43,"9":42,"10":42,"11":42,"12":42,"13":42,"14":42,"15":0,"16":0,"17":38,"18":38,"19":24,"20":24,"21":24,"22":14,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":24,"30":24,"31":24,"32":969086,"33":969086,"34":969086,"35":969086,"36":0,"37":0,"38":0,"39":38,"40":38,"41":155710,"42":155710,"43":319805,"44":319805,"45":155710,"46":38,"47":13,"48":20,"49":20,"50":332664,"51":332664,"52":20,"53":332664,"54":332664,"55":20,"56":112,"57":112,"58":268,"59":111,"60":135,"61":135,"62":135,"63":135,"64":20,"65":42,"66":42,"67":332664,"68":20,"69":20,"70":115,"71":13,"72":26,"73":26,"74":250038,"75":13,"76":13,"77":102,"78":13,"79":21,"80":21,"81":473758,"82":13,"83":26,"84":13,"85":839956,"86":374380,"87":13,"88":89,"89":89,"90":0,"91":320003,"92":89,"93":89,"94":89,"95":85,"96":85,"97":85,"98":85,"99":29,"100":29,"101":11,"102":11,"103":15,"104":15,"105":30,"106":57,"107":30,"108":1873753,"109":1873753,"110":1873753,"111":1873753,"112":1873753,"113":452284,"114":41972,"115":1421469,"116":193836,"117":9657,"118":1227633,"119":0,"120":0,"121":1227633,"122":1227633,"123":26425,"124":30,"125":85,"126":55,"127":55,"128":99,"129":55,"130":3101411,"131":624500,"132":55,"133":1},"f":{"0":143,"1":85,"2":43,"3":0,"4":24,"5":969086,"6":38,"7":13,"8":20,"9":332664,"10":112,"11":135,"12":320003,"13":89,"14":55},"b":{"0":[42,0],"1":[42,0],"2":[24,14],"3":[0,0],"4":[969086,0],"5":[969086,969086],"6":[0,0],"7":[0,0],"8":[332664,260258],"9":[20,115],"10":[13,102],"11":[13,89],"12":[13,13],"13":[374380,465576],"14":[89,0],"15":[89,59,47,31],"16":[29,11,15,30],"17":[30,27],"18":[452284,1421469],"19":[1873753,1873753],"20":[41972,410312],"21":[193836,1227633],"22":[9657,184179],"23":[0,1227633],"24":[0,0],"25":[1227633,0],"26":[1227633,1227633],"27":[26425,1201208],"28":[55,44],"29":[624500,2476911],"30":[3101411,1679927,2873191,581518,2488675,839966]},"inputSourceMap":{"version":3,"file":"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/Collector.ts","sources":["/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/Collector.ts"],"names":[],"mappings":"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","sourcesContent":["import {Dataset, Section} from \"./Dataset\";\nimport {Field, MField, Query, QueryNode, SField} from \"./Query\";\nimport {Result} from \"./Result\";\nimport {resolve} from \"dns\";\nimport InsightFacade from \"./InsightFacade\";\nimport {InsightError, InsightResult} from \"./IInsightFacade\";\n\nexport class Collector {\n\tprivate datasets: Dataset[];\n\tpublic currDatasetID!: string;\n\tconstructor(datasets: Dataset[]) {\n\t\tthis.datasets = datasets;\n\t}\n\n\tpublic getDatasets() {\n\t\treturn this.datasets;\n\t}\n\n\tpublic execQuery(query: Query): InsightResult[] {\n\t\tconst where = query.where;\n\t\tconst options = query.options;\n\t\tconst col: QueryNode = options.getChildWithKey(\"COLUMNS\") as QueryNode;\n\t\tconst resultFields = this.extractCol(col);\n\t\tlet hasComparator = false;\n\t\tlet filteredSections: Section[];\n\n\t\tif (where.getChilds().length === 1) {\n\t\t\thasComparator = true;\n\t\t}\n\n\t\tif (hasComparator) {\n\t\t\tconst comp = where.getChilds()[0];\n\t\t\tfilteredSections = this.execWhere(comp);\n\t\t} else {\n\t\t\tlet datasetID = this.splitKey(col.getChilds()[0].getKey())[0];\n\t\t\tfilteredSections = this.allSections(datasetID);\n\t\t}\n\n\t\t// apply all executed OPTIONS to it.\n\t\tconst results = this.execOpts(resultFields, filteredSections);\n\n\t\tif (options.getChilds().length === 2) {\n\t\t\tconst order = options.getChildWithKey(\"ORDER\") as QueryNode;\n\t\t\tconst orderBy = order.getChilds()[0].getKey();\n\t\t\treturn this.orderResults(results, orderBy);\n\t\t}\n\n\t\treturn results;\n\t}\n\n\tpublic allSections(datasetID: string): Section[] {\n\t\tlet all: Section[] = [];\n\n\t\tfor (const set of this.getDatasets()) {\n\t\t\tif (set.id === datasetID) {\n\t\t\t\tfor (const sec of set.sections) {\n\t\t\t\t\tall.push(sec);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn all;\n\t}\n\n\tpublic orderResults(results: InsightResult[], order: string): InsightResult[] {\n\t\tlet field = order;\n\t\tlet orderBy = this.splitKey(order)[1];\n\n\t\t// CHAT GPT\n\t\treturn results.sort((a, b) => {\n\t\t\tconst valA = a[field];\n\t\t\tconst valB = b[field];\n\t\t\tif (typeof valA === \"number\" && typeof valB === \"number\") {\n\t\t\t\treturn valA - valB;\n\t\t\t} else if (typeof valA === \"string\" && typeof valB === \"string\") {\n\t\t\t\treturn valA.localeCompare(valB);\n\t\t\t}\n\t\t\t// Handle cases where the field values are not directly comparable (e.g., mixed types)\n\t\t\treturn 0;\n\t\t});\n\t}\n\n\tpublic execOpts(columns: string[], sections: Section[]) {\n\t\tconst results: InsightResult[] = [];\n\n\t\tfor (const sec of sections) {\n\t\t\t// for each section, make a new result\n\t\t\tconst result = new Result();\n\t\t\tfor (const col of columns) {\n\t\t\t\tlet field = this.splitKey(col)[1];\n\t\t\t\tresult[col] = sec[field];\n\t\t\t}\n\t\t\tresults.push(result);\n\t\t}\n\n\t\treturn results;\n\t}\n\n\tpublic removeDuplicates(arr: any[]): any[] {\n\t\treturn Array.from(new Set(arr));\n\t}\n\n\t// CHAT GPT FUNCTION\n\tpublic filterDuplicates(sections: any[], n: number): any[] {\n\t\tconst sectionCountMap: Map<string, number> = new Map();\n\n\t\t// Count the occurrences of each section in the original array\n\t\tfor (const section of sections) {\n\t\t\tconst sectionString = JSON.stringify(section);\n\t\t\tsectionCountMap.set(sectionString, (sectionCountMap.get(sectionString) || 0) + 1);\n\t\t}\n\n\t\t// Filter sections that appear exactly 'n' times\n\t\tconst filteredSections = sections.filter((section) => {\n\t\t\tconst sectionString = JSON.stringify(section);\n\t\t\treturn sectionCountMap.get(sectionString) === n;\n\t\t});\n\n\t\treturn Array.from(new Set(filteredSections));\n\t}\n\n\tpublic extractCol(columns: QueryNode): string[] {\n\t\tlet cols: string[] = [];\n\t\tfor (const c of columns.getChilds()) {\n\t\t\tcols.push(c.getKey());\n\t\t}\n\t\treturn cols;\n\t}\n\n\t// returns an array of sections pertaining to the WHERE branch.\n\tpublic execWhere(node: QueryNode): any[] {\n\t\tconst operator = node.getKey();\n\t\tlet filtered: any[] = [];\n\t\tlet notFiltered: Section[] = [];\n\n\t\tif (operator === \"AND\") {\n\t\t\tfor (const child of node.getChilds()) {\n\t\t\t\tlet returnedSec = this.execWhere(child);\n\t\t\t\tfor (const s of returnedSec) {\n\t\t\t\t\tfiltered.push(s);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// filter out sections that aren't in all children arrays.\n\t\t\tfiltered = this.filterDuplicates(filtered, node.getChilds().length);\n\t\t\treturn filtered;\n\t\t} else if (operator === \"OR\") {\n\t\t\tfor (const child of node.getChilds()) {\n\t\t\t\tlet returnedSec = this.execWhere(child);\n\t\t\t\tfor (const s of returnedSec) {\n\t\t\t\t\tfiltered.push(s);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfiltered = this.removeDuplicates(filtered);\n\t\t\treturn filtered;\n\t\t} else if (operator === \"NOT\") {\n\t\t\tfor (const child of node.getChilds()) {\n\t\t\t\tlet returnedSec = this.execWhere(child);\n\t\t\t\tfor (const s of returnedSec) {\n\t\t\t\t\tfiltered.push(s);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const d of this.datasets) {\n\t\t\t\tif (this.currDatasetID === d.id) {\n\t\t\t\t\tfor (const s of d.sections) {\n\t\t\t\t\t\tif (!filtered.includes(s)) {\n\t\t\t\t\t\t\tnotFiltered.push(s);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// take all sections that aren't present in filtered and return it.\n\t\t\treturn notFiltered;\n\t\t} else if (operator === \"GT\" || operator === \"LT\" || operator === \"EQ\" || operator === \"IS\") {\n\t\t\treturn this.queryLeaf(node);\n\t\t}\n\t\treturn filtered;\n\t}\n\n\t// splits a key into \"datasetID\" and \"key\"\n\tpublic splitKey(key: string) {\n\t\treturn key.split(\"_\");\n\t}\n\n\tpublic queryLeaf(node: QueryNode): any[] {\n\t\tlet filteredSections: any[] = [];\n\t\tconst comparator = node.getKey(); // GT/EQ/LT/IS\n\t\tconst datasetID = this.splitKey(node.getChilds()[0].getKey())[0]; // ubc\n\t\tconst field = this.splitKey(node.getChilds()[0].getKey())[1]; // avg\n\t\tconst leafKey = node.getChilds()[0].getChilds()[0].getKey(); // 93\n\t\tthis.currDatasetID = datasetID;\n\t\tswitch (comparator) {\n\t\t\tcase \"GT\":\n\t\t\t\tfilteredSections = this.filterSectionsByCondition(\"GT\", datasetID, field, leafKey);\n\t\t\t\tbreak;\n\t\t\tcase \"LT\":\n\t\t\t\tfilteredSections = this.filterSectionsByCondition(\"LT\", datasetID, field, leafKey);\n\t\t\t\tbreak;\n\t\t\tcase \"EQ\":\n\t\t\t\tfilteredSections = this.filterSectionsByCondition(\"EQ\", datasetID, field, leafKey);\n\t\t\t\tbreak;\n\t\t\tcase \"IS\":\n\t\t\t\tfor (const set of this.getDatasets()) {\n\t\t\t\t\tif (set.id === datasetID) {\n\t\t\t\t\t\tfor (const sec of set.sections) {\n\t\t\t\t\t\t\tconst first = leafKey[0];\n\t\t\t\t\t\t\tconst last = leafKey[leafKey.length - 1];\n\t\t\t\t\t\t\tconst key = leafKey.replace(/\\*/g, \"\");\n\t\t\t\t\t\t\tconst matchVal: string = sec[field] as string;\n\t\t\t\t\t\t\tif ((first && last) === \"*\") {\n\t\t\t\t\t\t\t\tif (matchVal.includes(key)) {\n\t\t\t\t\t\t\t\t\tfilteredSections.push(sec);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (first === \"*\") {\n\t\t\t\t\t\t\t\tif (matchVal.endsWith(key)) {\n\t\t\t\t\t\t\t\t\tfilteredSections.push(sec);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (last === \"*\") {\n\t\t\t\t\t\t\t\tif (matchVal.startsWith(key)) {\n\t\t\t\t\t\t\t\t\tfilteredSections.push(sec);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ((first && last) !== \"*\") {\n\t\t\t\t\t\t\t\tif (matchVal === key) {\n\t\t\t\t\t\t\t\t\tfilteredSections.push(sec);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn filteredSections;\n\t}\n\n\tpublic filterSectionsByCondition(condition: string, datasetID: string, field: string, leafKey: any): Section[] {\n\t\tconst filteredSections: Section[] = [];\n\n\t\tfor (const set of this.getDatasets()) {\n\t\t\tif (set.id === datasetID) {\n\t\t\t\tfor (const sec of set.sections) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t(condition === \"GT\" && sec[field] > leafKey) ||\n\t\t\t\t\t\t(condition === \"LT\" && sec[field] < leafKey) ||\n\t\t\t\t\t\t(condition === \"EQ\" && sec[field] === leafKey)\n\t\t\t\t\t) {\n\t\t\t\t\t\tfilteredSections.push(sec);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn filteredSections;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0fbb922b5a4c93122ce21ba3e3cf91f64a7a9ffa","contentHash":"1937145453b49007f284289fcc15ee1e3ebcbccb1714b2dc6aa52b34013bd223"},"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/Result.ts":{"path":"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/Result.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/Result.ts","sources":["/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/Result.ts"],"names":[],"mappings":";;;AASA,MAAa,MAAM;CAElB;AAFD,wBAEC","sourcesContent":["import {\n\tIInsightFacade,\n\tInsightDataset,\n\tInsightDatasetKind,\n\tInsightError,\n\tInsightResult,\n\tNotFoundError,\n} from \"./IInsightFacade\";\n\nexport class Result implements InsightResult {\n\t[key: string]: string | number;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a7697402f0649b38701c2f5e18afd0caa96f74e1","contentHash":"13848590a00022c0ba59e52f2751933c1286437fc412ad0c5f2a33447793202c"},"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/Parse.ts":{"path":"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/Parse.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":90}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"3":{"start":{"line":6,"column":17},"end":{"line":6,"column":45}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":27}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":19}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":16}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":28}},"8":{"start":{"line":13,"column":15},"end":{"line":13,"column":41}},"9":{"start":{"line":14,"column":4},"end":{"line":21,"column":5}},"10":{"start":{"line":15,"column":8},"end":{"line":20,"column":9}},"11":{"start":{"line":16,"column":12},"end":{"line":19,"column":13}},"12":{"start":{"line":17,"column":16},"end":{"line":17,"column":29}},"13":{"start":{"line":18,"column":16},"end":{"line":18,"column":22}},"14":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"15":{"start":{"line":23,"column":8},"end":{"line":23,"column":20}},"16":{"start":{"line":25,"column":4},"end":{"line":29,"column":5}},"17":{"start":{"line":26,"column":19},"end":{"line":26,"column":40}},"18":{"start":{"line":27,"column":8},"end":{"line":27,"column":28}},"19":{"start":{"line":28,"column":8},"end":{"line":28,"column":20}},"20":{"start":{"line":30,"column":4},"end":{"line":48,"column":5}},"21":{"start":{"line":31,"column":8},"end":{"line":47,"column":9}},"22":{"start":{"line":32,"column":27},"end":{"line":32,"column":35}},"23":{"start":{"line":33,"column":12},"end":{"line":46,"column":13}},"24":{"start":{"line":34,"column":16},"end":{"line":40,"column":17}},"25":{"start":{"line":35,"column":32},"end":{"line":35,"column":54}},"26":{"start":{"line":36,"column":20},"end":{"line":39,"column":21}},"27":{"start":{"line":37,"column":24},"end":{"line":37,"column":46}},"28":{"start":{"line":38,"column":24},"end":{"line":38,"column":45}},"29":{"start":{"line":42,"column":17},"end":{"line":46,"column":13}},"30":{"start":{"line":43,"column":28},"end":{"line":43,"column":57}},"31":{"start":{"line":44,"column":16},"end":{"line":44,"column":38}},"32":{"start":{"line":45,"column":16},"end":{"line":45,"column":37}},"33":{"start":{"line":49,"column":4},"end":{"line":49,"column":16}},"34":{"start":{"line":51,"column":0},"end":{"line":51,"column":32}},"35":{"start":{"line":53,"column":15},"end":{"line":53,"column":41}},"36":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"37":{"start":{"line":55,"column":8},"end":{"line":55,"column":20}},"38":{"start":{"line":57,"column":4},"end":{"line":61,"column":5}},"39":{"start":{"line":58,"column":19},"end":{"line":58,"column":40}},"40":{"start":{"line":59,"column":8},"end":{"line":59,"column":28}},"41":{"start":{"line":60,"column":8},"end":{"line":60,"column":20}},"42":{"start":{"line":62,"column":4},"end":{"line":68,"column":5}},"43":{"start":{"line":63,"column":8},"end":{"line":66,"column":9}},"44":{"start":{"line":64,"column":23},"end":{"line":64,"column":44}},"45":{"start":{"line":65,"column":12},"end":{"line":65,"column":32}},"46":{"start":{"line":67,"column":8},"end":{"line":67,"column":20}},"47":{"start":{"line":69,"column":4},"end":{"line":81,"column":5}},"48":{"start":{"line":70,"column":8},"end":{"line":80,"column":9}},"49":{"start":{"line":71,"column":27},"end":{"line":71,"column":35}},"50":{"start":{"line":72,"column":12},"end":{"line":79,"column":13}},"51":{"start":{"line":73,"column":28},"end":{"line":73,"column":50}},"52":{"start":{"line":74,"column":16},"end":{"line":74,"column":37}},"53":{"start":{"line":76,"column":17},"end":{"line":79,"column":13}},"54":{"start":{"line":77,"column":28},"end":{"line":77,"column":50}},"55":{"start":{"line":78,"column":16},"end":{"line":78,"column":37}},"56":{"start":{"line":82,"column":4},"end":{"line":82,"column":16}},"57":{"start":{"line":84,"column":0},"end":{"line":84,"column":30}},"58":{"start":{"line":86,"column":19},"end":{"line":86,"column":37}},"59":{"start":{"line":87,"column":4},"end":{"line":90,"column":5}},"60":{"start":{"line":88,"column":8},"end":{"line":88,"column":44}},"61":{"start":{"line":89,"column":8},"end":{"line":89,"column":15}},"62":{"start":{"line":91,"column":4},"end":{"line":91,"column":40}},"63":{"start":{"line":92,"column":4},"end":{"line":94,"column":5}},"64":{"start":{"line":93,"column":8},"end":{"line":93,"column":35}},"65":{"start":{"line":96,"column":0},"end":{"line":96,"column":36}}},"fnMap":{"0":{"name":"makeLeaf","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":17}},"loc":{"start":{"line":5,"column":33},"end":{"line":10,"column":1}},"line":5},"1":{"name":"parseWhere","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":19}},"loc":{"start":{"line":12,"column":40},"end":{"line":50,"column":1}},"line":12},"2":{"name":"parseOpts","decl":{"start":{"line":52,"column":9},"end":{"line":52,"column":18}},"loc":{"start":{"line":52,"column":31},"end":{"line":83,"column":1}},"line":52},"3":{"name":"checkParsing","decl":{"start":{"line":85,"column":9},"end":{"line":85,"column":21}},"loc":{"start":{"line":85,"column":35},"end":{"line":95,"column":1}},"line":85}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":4},"end":{"line":21,"column":5}},"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":21,"column":5}},{"start":{"line":14,"column":4},"end":{"line":21,"column":5}}],"line":14},"1":{"loc":{"start":{"line":16,"column":12},"end":{"line":19,"column":13}},"type":"if","locations":[{"start":{"line":16,"column":12},"end":{"line":19,"column":13}},{"start":{"line":16,"column":12},"end":{"line":19,"column":13}}],"line":16},"2":{"loc":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},{"start":{"line":22,"column":4},"end":{"line":24,"column":5}}],"line":22},"3":{"loc":{"start":{"line":22,"column":8},"end":{"line":22,"column":58}},"type":"binary-expr","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":23}},{"start":{"line":22,"column":27},"end":{"line":22,"column":58}}],"line":22},"4":{"loc":{"start":{"line":25,"column":4},"end":{"line":29,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":29,"column":5}},{"start":{"line":25,"column":4},"end":{"line":29,"column":5}}],"line":25},"5":{"loc":{"start":{"line":25,"column":8},"end":{"line":25,"column":68}},"type":"binary-expr","locations":[{"start":{"line":25,"column":8},"end":{"line":25,"column":39}},{"start":{"line":25,"column":43},"end":{"line":25,"column":68}}],"line":25},"6":{"loc":{"start":{"line":31,"column":8},"end":{"line":47,"column":9}},"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":47,"column":9}},{"start":{"line":31,"column":8},"end":{"line":47,"column":9}}],"line":31},"7":{"loc":{"start":{"line":33,"column":12},"end":{"line":46,"column":13}},"type":"if","locations":[{"start":{"line":33,"column":12},"end":{"line":46,"column":13}},{"start":{"line":33,"column":12},"end":{"line":46,"column":13}}],"line":33},"8":{"loc":{"start":{"line":36,"column":20},"end":{"line":39,"column":21}},"type":"if","locations":[{"start":{"line":36,"column":20},"end":{"line":39,"column":21}},{"start":{"line":36,"column":20},"end":{"line":39,"column":21}}],"line":36},"9":{"loc":{"start":{"line":42,"column":17},"end":{"line":46,"column":13}},"type":"if","locations":[{"start":{"line":42,"column":17},"end":{"line":46,"column":13}},{"start":{"line":42,"column":17},"end":{"line":46,"column":13}}],"line":42},"10":{"loc":{"start":{"line":42,"column":21},"end":{"line":42,"column":101}},"type":"binary-expr","locations":[{"start":{"line":42,"column":21},"end":{"line":42,"column":37}},{"start":{"line":42,"column":41},"end":{"line":42,"column":69}},{"start":{"line":42,"column":73},"end":{"line":42,"column":101}}],"line":42},"11":{"loc":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},{"start":{"line":54,"column":4},"end":{"line":56,"column":5}}],"line":54},"12":{"loc":{"start":{"line":57,"column":4},"end":{"line":61,"column":5}},"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":61,"column":5}},{"start":{"line":57,"column":4},"end":{"line":61,"column":5}}],"line":57},"13":{"loc":{"start":{"line":62,"column":4},"end":{"line":68,"column":5}},"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":68,"column":5}},{"start":{"line":62,"column":4},"end":{"line":68,"column":5}}],"line":62},"14":{"loc":{"start":{"line":70,"column":8},"end":{"line":80,"column":9}},"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":80,"column":9}},{"start":{"line":70,"column":8},"end":{"line":80,"column":9}}],"line":70},"15":{"loc":{"start":{"line":72,"column":12},"end":{"line":79,"column":13}},"type":"if","locations":[{"start":{"line":72,"column":12},"end":{"line":79,"column":13}},{"start":{"line":72,"column":12},"end":{"line":79,"column":13}}],"line":72},"16":{"loc":{"start":{"line":76,"column":17},"end":{"line":79,"column":13}},"type":"if","locations":[{"start":{"line":76,"column":17},"end":{"line":79,"column":13}},{"start":{"line":76,"column":17},"end":{"line":79,"column":13}}],"line":76},"17":{"loc":{"start":{"line":87,"column":4},"end":{"line":90,"column":5}},"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":90,"column":5}},{"start":{"line":87,"column":4},"end":{"line":90,"column":5}}],"line":87}},"s":{"0":1,"1":1,"2":1,"3":362,"4":362,"5":362,"6":362,"7":1,"8":380,"9":380,"10":303,"11":84,"12":42,"13":42,"14":380,"15":5,"16":375,"17":111,"18":111,"19":111,"20":264,"21":265,"22":265,"23":265,"24":41,"25":79,"26":79,"27":41,"28":41,"29":224,"30":224,"31":224,"32":224,"33":264,"34":1,"35":226,"36":226,"37":5,"38":221,"39":57,"40":57,"41":57,"42":164,"43":81,"44":194,"45":194,"46":81,"47":83,"48":141,"49":141,"50":141,"51":57,"52":57,"53":84,"54":84,"55":84,"56":83,"57":1,"58":46,"59":46,"60":18,"61":18,"62":28,"63":28,"64":38,"65":1},"f":{"0":362,"1":380,"2":226,"3":46},"b":{"0":[303,77],"1":[42,42],"2":[5,375],"3":[380,77],"4":[111,264],"5":[375,300],"6":[265,0],"7":[41,224],"8":[41,38],"9":[224,0],"10":[224,155,120],"11":[5,221],"12":[57,164],"13":[81,83],"14":[141,0],"15":[57,84],"16":[84,0],"17":[18,28]},"inputSourceMap":{"version":3,"file":"/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/Parse.ts","sources":["/Users/davidmurgulet/Documents/UBC/310Project/project_team208/src/controller/Parse.ts"],"names":[],"mappings":"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","sourcesContent":["import {QueryNode} from \"./Query\";\nimport * as querystring from \"querystring\";\n\nexport function makeLeaf(query: any, parent: QueryNode): QueryNode {\n\tconst leaf = new QueryNode(query);\n\tleaf.addParent(parent);\n\tleaf.setLeaf();\n\treturn leaf;\n}\n\nexport function parseWhere(query: any, key: string, parent?: QueryNode): QueryNode {\n\tlet curr = new QueryNode(key);\n\t// dealing with duplicates\n\tif (parent instanceof QueryNode) {\n\t\tfor (let child of parent.getChilds()) {\n\t\t\tif (child.getKey() === curr.getKey()) {\n\t\t\t\tcurr = child;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// THIS IS AN IFFY CASE\n\tif (key === \"WHERE\" && Object.keys(query).length === 0) {\n\t\treturn curr;\n\t}\n\n\t// LEAF CASE\n\tif (Object.keys(query).length === 0 || typeof query === \"string\") {\n\t\tlet leaf = makeLeaf(query, curr);\n\t\tcurr.addChild(leaf);\n\t\treturn curr;\n\t}\n\t// iterate through keys (kids) of current query\n\tfor (const k in query) {\n\t\tif (Object.prototype.hasOwnProperty.call(query, k)) {\n\t\t\tlet subQuery: any = (query as any)[k];\n\t\t\tif (Array.isArray(subQuery)) {\n\t\t\t\tfor (let c of subQuery) {\n\t\t\t\t\tlet child = parseWhere(c, k, curr);\n\t\t\t\t\tif (!curr.getChilds().includes(child)) {\n\t\t\t\t\t\tchild.addParent(curr);\n\t\t\t\t\t\tcurr.addChild(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (!isNaN(subQuery) || typeof subQuery === \"string\" || typeof subQuery === \"object\") {\n\t\t\t\tlet child = parseWhere(subQuery, k, curr);\n\t\t\t\tchild.addParent(curr);\n\t\t\t\tcurr.addChild(child);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn curr;\n}\n\nexport function parseOpts(query: any, key: string): QueryNode {\n\tlet curr = new QueryNode(key);\n\n\t// COL is empty.\n\tif (Object.keys(query).length === 0) {\n\t\treturn curr;\n\t}\n\n\tif (typeof query === \"string\") {\n\t\tlet leaf = makeLeaf(query, curr);\n\t\tcurr.addChild(leaf);\n\t\treturn curr;\n\t}\n\n\t// COLUMNS CASE, WILL BE NON EMPTY ARRAY\n\tif (Array.isArray(query)) {\n\t\t// COLUMNS case, subQuery is an array of strings\n\t\t// iterate through, add as children\n\t\tfor (let child of query) {\n\t\t\tlet leaf = makeLeaf(child, curr);\n\t\t\tcurr.addChild(leaf);\n\t\t}\n\t\treturn curr;\n\t}\n\n\tfor (const k in query) {\n\t\tif (Object.prototype.hasOwnProperty.call(query, k)) {\n\t\t\tlet subQuery = (query as any)[k];\n\t\t\tif (typeof subQuery === \"string\") {\n\t\t\t\t// const leaf = new queryNode(subQuery);\n\t\t\t\tlet child = parseOpts(subQuery, k);\n\t\t\t\tcurr.addChild(child);\n\t\t\t} else if (typeof subQuery === \"object\") {\n\t\t\t\tlet child = parseOpts(subQuery, k);\n\t\t\t\tcurr.addChild(child);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn curr;\n}\n\nexport function checkParsing(node: QueryNode, level: number) {\n\tconst indent = \"  \".repeat(level);\n\n\tif (node.leaf) {\n\t\tconsole.log(indent + node.getKey());\n\t\treturn;\n\t}\n\n\tconsole.log(indent + node.getKey());\n\n\tfor (const c of node.getChilds()) {\n\t\tcheckParsing(c, level + 1);\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8d9fadbb60c60c72d682452368aac1a69cf865d7","contentHash":"2710c087d7c7408ae067843bb36ba3a74f9ad8a8244b37c6324402acb1c37768"}}